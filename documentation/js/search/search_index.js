var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/directives/DropZoneDirective.html",[0,1.53,1,1.317]],["body/directives/DropZoneDirective.html",[0,2.329,1,1.77,2,0.85,3,0.85,4,0.757,5,3.78,6,2.143,7,0.982,8,2.895,9,3.624,10,3.93,11,3.624,12,1.531,13,0.717,14,1.531,15,2.683,16,3.624,17,4.592,18,0.53,19,4.396,20,4.838,21,4.105,22,4.396,23,3.512,24,3.512,25,3.624,26,3.624,27,3.624,28,4.142,29,0.847,30,4.592,31,3.059,32,2.683,33,2.683,34,4.105,35,0.057,36,2.683,37,2.683,38,4.732,39,2.683,40,2.683,41,2.683,42,3.624,43,2.683,44,0.85,45,1.522,46,0.732,47,0.982,48,2.683,49,0.847,50,2.683,51,2.683,52,4.105,53,3.624,54,2.683,55,2.683,56,2.683,57,2.683,58,2.683,59,2.683,60,0.038,61,0.038]],["title/classes/FileItem.html",[47,0.987,62,0.854]],["body/classes/FileItem.html",[2,0.479,3,0.479,4,0.788,7,0.553,13,0.85,14,1.005,18,0.299,23,1.9,24,1.9,29,1.028,31,3.12,35,0.057,44,1.221,46,0.412,47,1.221,49,0.555,60,0.025,61,0.025,62,1.445,63,3.782,64,1.207,65,2.378,66,2.378,67,1.005,68,3.695,69,3.336,70,2.378,71,4.56,72,0.753,73,2.378,74,3.078,75,3.853,76,2.378,77,2.378,78,3.853,79,2.186,80,3.078,81,2.378,82,1.207,83,1.511,84,2.941,85,2.223,86,2.378,87,2.417,88,1.411,89,1.149,90,4.486,91,1.511,92,1.409,93,1.511,94,1.476,95,1.511,96,2,97,1.006,98,0.857,99,2.941,100,2.378,101,1.511,102,2.378,103,1.765,104,2.496,105,2.378,106,1.511,107,3.337,108,1.511,109,2.378,110,4.297,111,1.511,112,3.853,113,2.378,114,2.378,115,1.511,116,2.378,117,1.511,118,1.511,119,1.511,120,2.378,121,1.511,122,2.378,123,1.006,124,1.511,125,1.207,126,1.584,127,1.006,128,1.006,129,1.006,130,1.511,131,1.511,132,3.336,133,1.511,134,1.511,135,1.629,136,2.665,137,0.738,138,1.511,139,1.629,140,1.629,141,1.629,142,1.629,143,1.629,144,1.511,145,0.553,146,1.006,147,0.738,148,1.511,149,1.511,150,1.511,151,1.511,152,1.511,153,1.511,154,0.553,155,1.511,156,2.378,157,1.511,158,1.511,159,1.511,160,1.9,161,2.941,162,3.628,163,1.511,164,1.511,165,1.511,166,1.511,167,1.511,168,2.378,169,1.511,170,1.511,171,1.511,172,1.511,173,1.511,174,1.511,175,1.511,176,1.511,177,1.9,178,1.161,179,1.511,180,2.378,181,1.511,182,2.941,183,1.207,184,3.336,185,3.336,186,1.584,187,1.511,188,2.378,189,1.511,190,1.511]],["title/interfaces/FileSnapshot.html",[94,0.987,191,0.63]],["body/interfaces/FileSnapshot.html",[2,0.56,3,0.56,4,0.857,7,0.647,12,0.747,13,0.973,14,0.747,18,0.35,29,1.158,35,0.057,44,0.56,46,1.065,49,0.627,60,0.028,61,0.028,62,1.149,67,1.135,72,1.029,88,1.61,89,1.589,92,1.735,94,0.983,96,2.024,103,1.135,135,2.006,137,2.006,139,2.243,140,1.311,141,0.863,142,0.863,143,0.863,145,1.682,147,2.243,154,0.647,178,1.771,191,0.911,192,0.413,193,0.747,194,2.148,195,2.149,196,1.524,197,1.524,198,1.648,199,0.747,200,2.311,201,1.524,202,1.003,203,1.524,204,1.372,205,0.747,206,1.003,207,0.56,208,0.483,209,1.311,210,1.003,211,1.524,212,1.003,213,0.863,214,1.003,215,0.863,216,0.747,217,0.863,218,1.003,219,1.003,220,1.003,221,0.863,222,1.003,223,1.135,224,1.311,225,1.135,226,1.843,227,0.863,228,0.747,229,1.003,230,0.863,231,0.863,232,1.003,233,0.647,234,0.863,235,1.524,236,0.863,237,1.311,238,2.058,239,0.863,240,1.311,241,0.863,242,1.135,243,0.863,244,1.532,245,1.372,246,1.003,247,0.863,248,0.863,249,0.863,250,1.003,251,1.003,252,1.003,253,0.863,254,1.003,255,1.003,256,0.863,257,1.003,258,1.311,259,1.311]],["title/injectables/FireUploader.html",[260,1.53,261,1.317]],["body/injectables/FireUploader.html",[2,0.53,3,0.53,4,0.628,7,0.612,12,1.088,13,0.877,18,0.331,29,1.057,31,3.016,35,0.057,44,1.326,45,0.949,46,0.457,47,0.612,49,0.391,60,0.027,61,0.027,62,1.117,67,1.088,68,2.816,72,0.816,74,2.816,79,2,80,2.816,82,1.336,85,3.247,87,2.88,88,1.582,89,1.405,92,1.326,96,1.088,97,3.115,98,2.452,103,1.698,104,2.515,107,3.21,123,1.115,126,2.348,127,1.115,192,1.076,195,2.022,199,0.707,207,1.566,208,1.292,209,1.257,233,1.29,242,1.088,260,2,261,1.721,262,1.336,263,4.019,264,1.716,265,2.575,266,2.575,267,2.575,268,3.139,269,3.525,270,2.575,271,2.575,272,1.673,273,3.139,274,2.816,275,2.575,276,3.525,277,2.575,278,4.606,279,1.673,280,2.575,281,4.786,282,2.575,283,1.673,284,2.575,285,1.673,286,1.673,287,2.575,288,1.673,289,2.575,290,1.673,291,2.575,292,1.673,293,2.575,294,1.673,295,2.575,296,1.673,297,2.575,298,0.949,299,1.336,300,1.716,301,1.673,302,1.673,303,1.673,304,2.575,305,4.434,306,4.187,307,1.673,308,1.673,309,1.673,310,1.673,311,1.673,312,1.673,313,1.673,314,1.673]],["title/interfaces/FireUploaderConfig.html",[191,0.63,208,0.736]],["body/interfaces/FireUploaderConfig.html",[2,0.471,3,0.471,4,0.844,7,0.544,12,0.992,13,0.942,14,0.992,18,0.294,29,1.17,35,0.057,44,0.471,46,0.983,49,0.772,60,0.025,61,0.025,62,0.922,67,0.992,72,1.141,88,1.401,89,1.647,92,0.992,94,0.544,96,1.693,103,0.628,135,1.421,137,1.146,139,1.869,140,1.146,141,1.146,142,0.726,143,0.726,145,1.708,147,2.138,154,0.86,178,0.726,191,0.841,192,0.347,193,0.628,194,2.278,195,2.046,196,0.843,197,0.843,198,1.23,199,0.628,200,2.49,201,1.332,202,0.843,203,1.332,204,1.521,205,0.628,206,0.843,207,0.744,208,0.641,209,1.614,210,1.332,211,1.876,212,1.332,213,1.614,214,1.332,215,1.146,216,0.992,217,1.614,218,1.332,219,1.332,220,1.332,221,1.614,222,1.332,223,1.617,224,1.614,225,1.617,226,2.171,227,1.146,228,1.397,229,1.332,230,1.614,231,1.146,232,1.876,233,0.86,234,1.614,235,1.876,236,1.614,237,1.614,238,2.356,239,1.614,240,1.614,241,1.614,242,1.397,243,1.614,244,1.887,245,1.521,246,1.332,247,1.614,248,1.614,249,1.146,250,1.332,251,1.332,252,1.332,253,1.614,254,1.332,255,1.332,256,1.614,257,0.843,258,1.146,259,1.146]],["title/modules/FireUploaderModule.html",[315,1.317,316,1.53]],["body/modules/FireUploaderModule.html",[1,2.539,2,0.936,3,0.936,4,0.487,10,2.361,13,0.584,35,0.057,44,1.57,45,1.677,46,1.295,47,1.082,49,0.69,60,0.041,61,0.041,79,1.677,104,2.193,123,1.969,126,2.87,127,1.969,146,1.969,192,0.69,207,0.936,208,1.176,216,1.633,261,2.103,264,1.969,274,3.441,298,2.444,299,2.361,315,1.888,316,2.852,317,1.677,318,2.361,319,3.441,320,1.969,321,3.044,322,2.361,323,2.361,324,2.361,325,3.088,326,1.969,327,1.969,328,3.866,329,4.308,330,3.866,331,2.956,332,1.677,333,2.361,334,2.956,335,2.956,336,2.956,337,2.956,338,2.956,339,1.969,340,2.956]],["title/interfaces/UploaderProgress.html",[191,0.63,198,1.139]],["body/interfaces/UploaderProgress.html",[2,0.618,3,0.618,4,0.846,7,0.714,12,0.824,13,0.966,14,0.824,18,0.386,29,1.03,35,0.058,44,0.618,46,1.111,49,0.675,60,0.03,61,0.03,62,1.091,67,1.221,72,1.091,88,1.395,89,1.397,92,1.221,94,0.714,96,1.914,103,0.824,135,1.682,137,1.411,139,2.212,140,2.081,141,0.952,142,1.86,143,1.86,145,1.658,147,2.081,154,0.714,178,0.952,191,0.95,192,0.455,193,0.824,194,2.081,195,1.989,196,1.106,197,1.106,198,1.61,199,0.824,200,2.471,201,2.161,202,1.64,203,1.954,204,1.61,205,0.824,206,1.106,207,0.618,208,0.532,209,1.411,210,1.106,211,1.64,212,1.106,213,0.952,214,1.106,215,0.952,216,0.824,217,0.952,218,1.106,219,1.106,220,1.106,221,0.952,222,1.106,223,1.221,224,1.411,225,1.221,226,1.954,227,0.952,228,0.824,229,1.106,230,0.952,231,0.952,232,1.106,233,0.714,234,0.952,235,1.64,236,0.952,237,1.411,238,2.161,239,0.952,240,1.411,241,0.952,242,1.221,243,0.952,244,1.61,245,1.455,246,1.106,247,0.952,248,0.952,249,0.952,250,1.106,251,1.106,252,1.106,253,0.952,254,1.106,255,1.106,256,0.952,257,1.106,258,1.411,259,1.411]],["title/interfaces/UploaderState.html",[191,0.63,205,1.139]],["body/interfaces/UploaderState.html",[2,0.618,3,0.618,4,0.857,7,0.714,12,0.824,13,0.982,14,0.824,18,0.386,29,1.03,35,0.058,44,0.618,46,1.111,49,0.675,60,0.03,61,0.03,62,1.289,67,1.221,72,1.091,88,1.395,89,1.397,92,1.221,94,0.714,96,1.955,103,0.824,135,2.154,137,1.411,139,2.299,140,1.411,141,0.952,142,0.952,143,0.952,145,1.658,147,2.081,154,0.714,178,0.952,191,0.95,192,0.455,193,0.824,194,2.212,195,1.989,196,1.106,197,1.106,198,1.719,199,0.824,200,2.361,201,1.64,202,1.106,203,1.954,204,1.455,205,1.221,206,1.64,207,0.618,208,0.532,209,1.411,210,1.106,211,1.64,212,1.106,213,0.952,214,1.106,215,0.952,216,0.824,217,0.952,218,1.106,219,1.106,220,1.106,221,0.952,222,1.106,223,1.221,224,1.411,225,1.221,226,1.954,227,0.952,228,0.824,229,1.106,230,0.952,231,0.952,232,1.106,233,0.714,234,0.952,235,1.64,236,0.952,237,1.411,238,2.161,239,0.952,240,1.411,241,0.952,242,1.221,243,0.952,244,1.61,245,1.455,246,1.106,247,0.952,248,0.952,249,0.952,250,1.106,251,1.106,252,1.106,253,0.952,254,1.106,255,1.106,256,0.952,257,1.106,258,1.411,259,1.411]],["title/coverage.html",[341,2.905]],["body/coverage.html",[0,1.665,1,1.433,4,0.484,5,2.345,6,2.345,13,0.581,29,0.686,35,0.056,47,1.409,49,0.686,60,0.04,61,0.04,62,0.93,63,2.345,64,2.345,85,1.956,94,1.075,128,1.956,129,1.956,186,3.534,191,1.065,192,1.186,193,1.925,198,1.24,205,1.24,208,0.801,260,1.665,261,1.433,262,2.345,298,1.665,300,1.956,327,1.956,332,2.754,339,1.956,341,2.345,342,1.956,343,2.936,344,2.936,345,2.936,346,2.936,347,2.936,348,2.936,349,2.936,350,2.936,351,2.345,352,3.153,353,5.162,354,2.936,355,2.936,356,3.849,357,2.345,358,2.936,359,3.344,360,2.345,361,2.345,362,2.345,363,2.345,364,2.345,365,2.345,366,2.936,367,2.936]],["title/dependencies.html",[317,1.833,368,2.273]],["body/dependencies.html",[35,0.057,45,2.003,60,0.045,61,0.045,125,2.82,215,1.724,317,2.003,320,2.352,369,3.531,370,5.246,371,3.531,372,3.531,373,3.531,374,3.531,375,4.326,376,3.456,377,3.531,378,3.531,379,3.531,380,3.531,381,3.531,382,3.531,383,3.531,384,3.531,385,3.531,386,3.531,387,3.531,388,3.531,389,3.531,390,3.531,391,3.531,392,3.531,393,3.531,394,3.531,395,3.531,396,3.531]],["title/miscellaneous/enumerations.html",[397,0.96,398,2.581]],["body/miscellaneous/enumerations.html",[18,0.788,35,0.049,60,0.049,61,0.049,72,1.262,89,1.262,98,2.638,192,0.93,193,1.964,244,1.964,245,1.682,258,2.27,259,2.27,397,1.682,398,3.181,399,2.653]],["title/miscellaneous/functions.html",[332,1.833,397,0.96]],["body/miscellaneous/functions.html",[4,0.785,8,2.388,13,0.591,18,0.591,29,0.698,35,0.053,60,0.041,61,0.041,72,1.454,87,3.251,88,1.786,89,1.546,129,2.595,145,1.426,146,1.992,183,2.388,192,0.698,194,1.902,199,1.645,204,1.645,207,0.947,216,1.645,223,1.645,224,1.46,225,1.263,227,1.46,228,1.645,231,1.46,237,1.902,240,1.902,245,1.645,249,2.241,261,1.46,264,1.992,327,2.595,332,1.696,333,2.388,339,2.595,359,1.992,360,3.111,361,3.111,362,3.111,363,3.111,397,1.263,399,1.992,400,3.802,401,2.989,402,5.298,403,2.989,404,2.989,405,2.989,406,2.989,407,2.989,408,2.989,409,2.989,410,2.989,411,3.895,412,3.895,413,2.989,414,2.989,415,2.989]],["title/index.html",[18,0.45,233,0.832,416,1.816]],["body/index.html",[35,0.05,60,0.05,61,0.05,342,2.763,417,4.147,418,4.147,419,4.147,420,4.147]],["title/license.html",[233,0.832,416,1.816,421,1.816]],["body/license.html",[4,0.535,28,2.589,35,0.043,60,0.043,61,0.043,242,1.733,321,2.16,326,2.16,342,2.16,421,2.589,422,3.242,423,4.501,424,3.242,425,3.242,426,3.242,427,3.242,428,4.102,429,3.242,430,3.242,431,3.242,432,3.242,433,4.102,434,3.242,435,4.731,436,5.17,437,3.242,438,4.102,439,4.501,440,3.242,441,4.501,442,4.102,443,3.242,444,3.242,445,3.242,446,3.242,447,3.242,448,3.242,449,3.242,450,3.242,451,3.242,452,3.242,453,3.242,454,3.242,455,3.242,456,3.242,457,4.102,458,4.102,459,3.242,460,3.242,461,4.102,462,3.242,463,3.242,464,3.242,465,3.242,466,3.242,467,3.242,468,3.242,469,3.242,470,3.242,471,3.242,472,3.242,473,3.242,474,3.242,475,3.242,476,3.242,477,3.242,478,3.242,479,3.242,480,3.242,481,3.242,482,3.242]],["title/modules.html",[315,1.776]],["body/modules.html",[35,0.05,60,0.05,61,0.05,315,2.018,316,2.345,376,3.302,483,4.134,484,4.134,485,4.134]],["title/overview.html",[486,2.905]],["body/overview.html",[0,2.123,1,2.548,35,0.052,46,1.022,47,1.37,60,0.047,61,0.047,79,2.123,154,1.757,191,0.874,260,2.123,315,2.189,316,2.885,317,2.123,318,2.99,319,2.99,320,2.494,321,2.494,322,2.99,323,2.99,324,2.99,325,3.58,326,2.494,486,2.99,487,3.743,488,3.743]],["title/miscellaneous/variables.html",[352,2.153,397,0.96]],["body/miscellaneous/variables.html",[4,0.775,13,0.75,18,0.568,29,1.055,35,0.056,49,0.671,60,0.04,61,0.04,97,3.215,98,2.665,104,2.409,128,2.83,136,2.294,145,1.389,154,1.389,160,3.03,177,3.855,186,2.527,192,0.886,195,1.213,200,1.402,204,1.602,207,0.91,208,1.16,213,1.402,217,1.402,221,1.402,223,1.213,225,1.602,228,1.213,230,2.074,234,1.402,236,1.402,239,1.402,241,1.402,243,1.402,244,1.213,247,1.402,248,1.402,253,1.402,256,1.402,298,2.409,300,2.83,351,3.03,352,1.913,357,3.03,359,1.913,364,3.393,365,3.393,397,1.213,399,2.527,400,3.393,489,4.247,490,2.871,491,2.871,492,2.871,493,2.871,494,2.871,495,2.871,496,3.793,497,4.247,498,4.247,499,3.793,500,2.871,501,2.871,502,2.871,503,2.871,504,2.871]],["title/routes.html",[505,2.905]],["body/routes.html",[35,0.05,60,0.05,61,0.05,505,3.355]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"modules/FireUploaderModule.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":141,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["0.8.26",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":154,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.2",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["1.1.20150312",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":186,"title":{},"body":{"classes/FileItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["11/11",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["13/15",{"_index":347,"title":{},"body":{"coverage.html":{}}}],["19/19",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":487,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2018",{"_index":425,"title":{},"body":{"license.html":{}}}],["30/33",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":488,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["5.0.4",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":346,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["_instanc",{"_index":269,"title":{},"body":{"injectables/FireUploader.html":{}}}],["_storag",{"_index":273,"title":{},"body":{"injectables/FireUploader.html":{}}}],["_task",{"_index":69,"title":{},"body":{"classes/FileItem.html":{}}}],["_upload",{"_index":84,"title":{},"body":{"classes/FileItem.html":{}}}],["abov",{"_index":456,"title":{},"body":{"license.html":{}}}],["accept",{"_index":225,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["access",{"_index":265,"title":{},"body":{"injectables/FireUploader.html":{}}}],["action",{"_index":477,"title":{},"body":{"license.html":{}}}],["activ",{"_index":135,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["ad",{"_index":66,"title":{},"body":{"classes/FileItem.html":{}}}],["add",{"_index":12,"title":{},"body":{"directives/DropZoneDirective.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["addfil",{"_index":270,"title":{},"body":{"injectables/FireUploader.html":{}}}],["addfiles(fil",{"_index":277,"title":{},"body":{"injectables/FireUploader.html":{}}}],["allow",{"_index":501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":449,"title":{},"body":{"license.html":{}}}],["angular/anim",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":45,"title":{},"body":{"directives/DropZoneDirective.html":{},"injectables/FireUploader.html":{},"modules/FireUploaderModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["angularfire2",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["angularfire2/storag",{"_index":123,"title":{},"body":{"classes/FileItem.html":{},"injectables/FireUploader.html":{},"modules/FireUploaderModule.html":{}}}],["angularfire2/storage/interfac",{"_index":124,"title":{},"body":{"classes/FileItem.html":{}}}],["angularfirestorag",{"_index":274,"title":{},"body":{"injectables/FireUploader.html":{},"modules/FireUploaderModule.html":{}}}],["angularfirestoragemodul",{"_index":330,"title":{},"body":{"modules/FireUploaderModule.html":{}}}],["angularfireuploadtask",{"_index":90,"title":{},"body":{"classes/FileItem.html":{}}}],["anywher",{"_index":266,"title":{},"body":{"injectables/FireUploader.html":{}}}],["app",{"_index":267,"title":{},"body":{"injectables/FireUploader.html":{}}}],["argument",{"_index":34,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["aris",{"_index":481,"title":{},"body":{"license.html":{}}}],["array",{"_index":405,"title":{},"body":{"miscellaneous/functions.html":{}}}],["assign",{"_index":102,"title":{},"body":{"classes/FileItem.html":{}}}],["assigntask",{"_index":73,"title":{},"body":{"classes/FileItem.html":{}}}],["assigntask(task",{"_index":100,"title":{},"body":{"classes/FileItem.html":{}}}],["associ",{"_index":437,"title":{},"body":{"license.html":{}}}],["author",{"_index":470,"title":{},"body":{"license.html":{}}}],["autostart",{"_index":234,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/variables.html":{}}}],["befor",{"_index":246,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["behaviorsubject",{"_index":99,"title":{},"body":{"classes/FileItem.html":{}}}],["between",{"_index":251,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["blob",{"_index":156,"title":{},"body":{"classes/FileItem.html":{}}}],["boolean",{"_index":194,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":320,"title":{},"body":{"modules/FireUploaderModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["brows",{"_index":485,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":376,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["byte",{"_index":201,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["bytestransf",{"_index":142,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["c",{"_index":424,"title":{},"body":{"license.html":{}}}],["cancel",{"_index":74,"title":{},"body":{"classes/FileItem.html":{},"injectables/FireUploader.html":{}}}],["cancel(id",{"_index":282,"title":{},"body":{"injectables/FireUploader.html":{}}}],["catch((err",{"_index":168,"title":{},"body":{"classes/FileItem.html":{}}}],["chang",{"_index":113,"title":{},"body":{"classes/FileItem.html":{}}}],["charg",{"_index":432,"title":{},"body":{"license.html":{}}}],["check",{"_index":494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chunk",{"_index":406,"title":{},"body":{"miscellaneous/functions.html":{}}}],["claim",{"_index":473,"title":{},"body":{"license.html":{}}}],["class",{"_index":47,"title":{"classes/FileItem.html":{}},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"injectables/FireUploader.html":{},"modules/FireUploaderModule.html":{},"coverage.html":{},"overview.html":{}}}],["classlist.j",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["cluster_fireuploadermodul",{"_index":322,"title":{},"body":{"modules/FireUploaderModule.html":{},"overview.html":{}}}],["cluster_fireuploadermodule_declar",{"_index":323,"title":{},"body":{"modules/FireUploaderModule.html":{},"overview.html":{}}}],["cluster_fireuploadermodule_export",{"_index":324,"title":{},"body":{"modules/FireUploaderModule.html":{},"overview.html":{}}}],["complet",{"_index":116,"title":{},"body":{"classes/FileItem.html":{}}}],["condit",{"_index":455,"title":{},"body":{"license.html":{}}}],["config",{"_index":207,"title":{},"body":{"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"modules/FireUploaderModule.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":482,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":82,"title":{},"body":{"classes/FileItem.html":{},"injectables/FireUploader.html":{}}}],["constructor(@opt",{"_index":302,"title":{},"body":{"injectables/FireUploader.html":{}}}],["constructor(config",{"_index":272,"title":{},"body":{"injectables/FireUploader.html":{}}}],["constructor(fil",{"_index":83,"title":{},"body":{"classes/FileItem.html":{}}}],["constructor(publ",{"_index":131,"title":{},"body":{"classes/FileItem.html":{}}}],["contain",{"_index":259,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/enumerations.html":{}}}],["contract",{"_index":478,"title":{},"body":{"license.html":{}}}],["convert",{"_index":8,"title":{},"body":{"directives/DropZoneDirective.html":{},"miscellaneous/functions.html":{}}}],["converttomb",{"_index":360,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["converttomb(s",{"_index":401,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copi",{"_index":435,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":423,"title":{},"body":{"license.html":{}}}],["core",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":229,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["coverag",{"_index":341,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":146,"title":{},"body":{"classes/FileItem.html":{},"modules/FireUploaderModule.html":{},"miscellaneous/functions.html":{}}}],["crop",{"_index":258,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/enumerations.html":{}}}],["current",{"_index":218,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["custom",{"_index":214,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["damag",{"_index":474,"title":{},"body":{"license.html":{}}}],["date",{"_index":219,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["deal",{"_index":438,"title":{},"body":{"license.html":{}}}],["declar",{"_index":319,"title":{},"body":{"modules/FireUploaderModule.html":{},"overview.html":{}}}],["default",{"_index":97,"title":{},"body":{"classes/FileItem.html":{},"injectables/FireUploader.html":{},"miscellaneous/variables.html":{}}}],["default_config",{"_index":300,"title":{},"body":{"injectables/FireUploader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":31,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"injectables/FireUploader.html":{}}}],["delet",{"_index":75,"title":{},"body":{"classes/FileItem.html":{}}}],["dep",{"_index":340,"title":{},"body":{"modules/FireUploaderModule.html":{}}}],["depend",{"_index":317,"title":{"dependencies.html":{}},"body":{"modules/FireUploaderModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":7,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["dialog",{"_index":415,"title":{},"body":{"miscellaneous/functions.html":{}}}],["direct",{"_index":0,"title":{"directives/DropZoneDirective.html":{}},"body":{"directives/DropZoneDirective.html":{},"coverage.html":{},"overview.html":{}}}],["directori",{"_index":210,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["distribut",{"_index":447,"title":{},"body":{"license.html":{}}}],["document",{"_index":342,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["download",{"_index":196,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["downloadurl",{"_index":178,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["drag",{"_index":26,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["dragev",{"_index":42,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["dragleav",{"_index":22,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["dragleave(",{"_index":36,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["dragov",{"_index":20,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["dragover(",{"_index":39,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["drop",{"_index":10,"title":{},"body":{"directives/DropZoneDirective.html":{},"modules/FireUploaderModule.html":{}}}],["drop(",{"_index":41,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["dropzon",{"_index":17,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["dropzonedirect",{"_index":1,"title":{"directives/DropZoneDirective.html":{}},"body":{"directives/DropZoneDirective.html":{},"modules/FireUploaderModule.html":{},"coverage.html":{},"overview.html":{}}}],["dynam",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":211,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["e.preventdefault",{"_index":52,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["each",{"_index":65,"title":{},"body":{"classes/FileItem.html":{}}}],["edg",{"_index":252,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["element",{"_index":9,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["emit",{"_index":24,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{}}}],["enabl",{"_index":222,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["enum",{"_index":257,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["enumer",{"_index":398,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":159,"title":{},"body":{"classes/FileItem.html":{}}}],["error",{"_index":160,"title":{},"body":{"classes/FileItem.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":28,"title":{},"body":{"directives/DropZoneDirective.html":{},"license.html":{}}}],["eventemitt",{"_index":30,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["exceed",{"_index":498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":46,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"modules/FireUploaderModule.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"overview.html":{}}}],["express",{"_index":463,"title":{},"body":{"license.html":{}}}],["extens",{"_index":137,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["fals",{"_index":136,"title":{},"body":{"classes/FileItem.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":4,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"modules/FireUploaderModule.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["file'",{"_index":220,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["file.nam",{"_index":133,"title":{},"body":{"classes/FileItem.html":{}}}],["file.name.split('.').pop",{"_index":138,"title":{},"body":{"classes/FileItem.html":{}}}],["file.s",{"_index":144,"title":{},"body":{"classes/FileItem.html":{}}}],["file.typ",{"_index":134,"title":{},"body":{"classes/FileItem.html":{}}}],["file.type.split('/')[0",{"_index":493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileitem",{"_index":62,"title":{"classes/FileItem.html":{}},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"coverage.html":{}}}],["filenam",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filesnapshot",{"_index":94,"title":{"interfaces/FileSnapshot.html":{}},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"coverage.html":{}}}],["fire",{"_index":126,"title":{},"body":{"classes/FileItem.html":{},"injectables/FireUploader.html":{},"modules/FireUploaderModule.html":{}}}],["firebas",{"_index":215,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"dependencies.html":{}}}],["fireupload",{"_index":261,"title":{"injectables/FireUploader.html":{}},"body":{"injectables/FireUploader.html":{},"modules/FireUploaderModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fireuploader(config",{"_index":334,"title":{},"body":{"modules/FireUploaderModule.html":{}}}],["fireuploaderconfig",{"_index":208,"title":{"interfaces/FireUploaderConfig.html":{}},"body":{"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"modules/FireUploaderModule.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fireuploadermodul",{"_index":316,"title":{"modules/FireUploaderModule.html":{}},"body":{"modules/FireUploaderModule.html":{},"modules.html":{},"overview.html":{}}}],["fireuploaderref",{"_index":85,"title":{},"body":{"classes/FileItem.html":{},"injectables/FireUploader.html":{},"coverage.html":{}}}],["fireuploaderref(config",{"_index":307,"title":{},"body":{"injectables/FireUploader.html":{}}}],["fit",{"_index":466,"title":{},"body":{"license.html":{}}}],["follow",{"_index":454,"title":{},"body":{"license.html":{}}}],["forroot(config",{"_index":336,"title":{},"body":{"modules/FireUploaderModule.html":{}}}],["free",{"_index":431,"title":{},"body":{"license.html":{}}}],["function",{"_index":332,"title":{"miscellaneous/functions.html":{}},"body":{"modules/FireUploaderModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":452,"title":{},"body":{"license.html":{}}}],["gener",{"_index":235,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["get",{"_index":416,"title":{"index.html":{},"license.html":{}},"body":{}}],["global",{"_index":263,"title":{},"body":{"injectables/FireUploader.html":{}}}],["grant",{"_index":430,"title":{},"body":{"license.html":{}}}],["height",{"_index":240,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{}}}],["herebi",{"_index":429,"title":{},"body":{"license.html":{}}}],["holder",{"_index":471,"title":{},"body":{"license.html":{}}}],["hostlisten",{"_index":21,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["hostlistener('dragleav",{"_index":58,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["hostlistener('dragov",{"_index":55,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["hostlistener('drop",{"_index":50,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["id",{"_index":278,"title":{},"body":{"injectables/FireUploader.html":{}}}],["identifi",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":145,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["image/jpeg",{"_index":255,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["impli",{"_index":464,"title":{},"body":{"license.html":{}}}],["import",{"_index":44,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"modules/FireUploaderModule.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["includ",{"_index":441,"title":{},"body":{"license.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"modules/FireUploaderModule.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["inject",{"_index":260,"title":{"injectables/FireUploader.html":{}},"body":{"injectables/FireUploader.html":{},"coverage.html":{},"overview.html":{}}}],["inject(uploader_config)config",{"_index":303,"title":{},"body":{"injectables/FireUploader.html":{}}}],["injectiontoken('config",{"_index":503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instanc",{"_index":297,"title":{},"body":{"injectables/FireUploader.html":{}}}],["instanceof",{"_index":306,"title":{},"body":{"injectables/FireUploader.html":{}}}],["interfac",{"_index":191,"title":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"coverage.html":{},"overview.html":{}}}],["isimag",{"_index":128,"title":{},"body":{"classes/FileItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isimage(fil",{"_index":149,"title":{},"body":{"classes/FileItem.html":{}}}],["item",{"_index":199,"title":{},"body":{"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{}}}],["item.t",{"_index":64,"title":{},"body":{"classes/FileItem.html":{},"coverage.html":{}}}],["item.ts:109",{"_index":121,"title":{},"body":{"classes/FileItem.html":{}}}],["item.ts:115",{"_index":111,"title":{},"body":{"classes/FileItem.html":{}}}],["item.ts:129",{"_index":115,"title":{},"body":{"classes/FileItem.html":{}}}],["item.ts:14",{"_index":91,"title":{},"body":{"classes/FileItem.html":{}}}],["item.ts:17",{"_index":95,"title":{},"body":{"classes/FileItem.html":{}}}],["item.ts:20",{"_index":86,"title":{},"body":{"classes/FileItem.html":{}}}],["item.ts:22",{"_index":93,"title":{},"body":{"classes/FileItem.html":{}}}],["item.ts:48",{"_index":101,"title":{},"body":{"classes/FileItem.html":{}}}],["item.ts:63",{"_index":108,"title":{},"body":{"classes/FileItem.html":{}}}],["item.ts:73",{"_index":117,"title":{},"body":{"classes/FileItem.html":{}}}],["item.ts:80",{"_index":119,"title":{},"body":{"classes/FileItem.html":{}}}],["item.ts:87",{"_index":106,"title":{},"body":{"classes/FileItem.html":{}}}],["item.ts:95",{"_index":118,"title":{},"body":{"classes/FileItem.html":{}}}],["js",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":462,"title":{},"body":{"license.html":{}}}],["legend",{"_index":318,"title":{},"body":{"modules/FireUploaderModule.html":{},"overview.html":{}}}],["liabil",{"_index":475,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":472,"title":{},"body":{"license.html":{}}}],["licens",{"_index":421,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":442,"title":{},"body":{"license.html":{}}}],["listen",{"_index":38,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["local",{"_index":122,"title":{},"body":{"classes/FileItem.html":{}}}],["manual",{"_index":280,"title":{},"body":{"injectables/FireUploader.html":{}}}],["match",{"_index":61,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"modules/FireUploaderModule.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["max",{"_index":497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxfil",{"_index":230,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":232,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["maxfileserror",{"_index":364,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxfilesizeerror",{"_index":365,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxheight",{"_index":412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maximum",{"_index":226,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["maxwidth",{"_index":411,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mb",{"_index":231,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{}}}],["merchant",{"_index":465,"title":{},"body":{"license.html":{}}}],["merg",{"_index":445,"title":{},"body":{"license.html":{}}}],["messag",{"_index":496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["method",{"_index":72,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mime",{"_index":254,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["miscellan",{"_index":397,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":422,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":444,"title":{},"body":{"license.html":{}}}],["modul",{"_index":315,"title":{"modules/FireUploaderModule.html":{},"modules.html":{}},"body":{"modules/FireUploaderModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":328,"title":{},"body":{"modules/FireUploaderModule.html":{}}}],["multipl",{"_index":223,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["murhaf",{"_index":426,"title":{},"body":{"license.html":{}}}],["name",{"_index":88,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":409,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":49,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"modules/FireUploaderModule.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["ngmodul",{"_index":329,"title":{},"body":{"modules/FireUploaderModule.html":{}}}],["ngxfireupload",{"_index":417,"title":{},"body":{"index.html":{}}}],["noninfring",{"_index":469,"title":{},"body":{"license.html":{}}}],["notic",{"_index":457,"title":{},"body":{"license.html":{}}}],["notif",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":177,"title":{},"body":{"classes/FileItem.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":200,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":295,"title":{},"body":{"injectables/FireUploader.html":{}}}],["obtain",{"_index":434,"title":{},"body":{"license.html":{}}}],["ondragleave(",{"_index":59,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["ondragover(",{"_index":56,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["ondrop(",{"_index":51,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["onsnapshotchang",{"_index":76,"title":{},"body":{"classes/FileItem.html":{}}}],["onsnapshotchanges(snapshot",{"_index":109,"title":{},"body":{"classes/FileItem.html":{}}}],["ontaskcomplet",{"_index":77,"title":{},"body":{"classes/FileItem.html":{}}}],["ontaskcomplete(snapshot",{"_index":114,"title":{},"body":{"classes/FileItem.html":{}}}],["open",{"_index":414,"title":{},"body":{"miscellaneous/functions.html":{}}}],["option",{"_index":89,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":480,"title":{},"body":{"license.html":{}}}],["out",{"_index":326,"title":{},"body":{"modules/FireUploaderModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":19,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["output('dropzon",{"_index":48,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["over",{"_index":27,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["overview",{"_index":486,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":368,"title":{"dependencies.html":{}},"body":{}}],["parallel",{"_index":407,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parallelupload",{"_index":228,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parallizeupload",{"_index":361,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parallizeuploads(fil",{"_index":403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paramdir",{"_index":213,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/variables.html":{}}}],["paramet",{"_index":87,"title":{},"body":{"classes/FileItem.html":{},"injectables/FireUploader.html":{},"miscellaneous/functions.html":{}}}],["paramnam",{"_index":217,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":467,"title":{},"body":{"license.html":{}}}],["paus",{"_index":78,"title":{},"body":{"classes/FileItem.html":{}}}],["percentag",{"_index":140,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["permiss",{"_index":428,"title":{},"body":{"license.html":{}}}],["permit",{"_index":451,"title":{},"body":{"license.html":{}}}],["person",{"_index":433,"title":{},"body":{"license.html":{}}}],["photos/{filenam",{"_index":212,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["portion",{"_index":460,"title":{},"body":{"license.html":{}}}],["privat",{"_index":68,"title":{},"body":{"classes/FileItem.html":{},"injectables/FireUploader.html":{}}}],["processfil",{"_index":362,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processfile(item",{"_index":408,"title":{},"body":{"miscellaneous/functions.html":{}}}],["progress",{"_index":139,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["projects/.../fir",{"_index":399,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../utils.t",{"_index":400,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/core/src/lib/drop",{"_index":5,"title":{},"body":{"directives/DropZoneDirective.html":{},"coverage.html":{}}}],["projects/core/src/lib/fil",{"_index":63,"title":{},"body":{"classes/FileItem.html":{},"coverage.html":{}}}],["projects/core/src/lib/fir",{"_index":192,"title":{},"body":{"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"modules/FireUploaderModule.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/core/src/lib/utils.t",{"_index":359,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["promis",{"_index":105,"title":{},"body":{"classes/FileItem.html":{}}}],["properti",{"_index":67,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["provid",{"_index":321,"title":{},"body":{"modules/FireUploaderModule.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":70,"title":{},"body":{"classes/FileItem.html":{}}}],["publish",{"_index":446,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":468,"title":{},"body":{"license.html":{}}}],["px",{"_index":238,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["qualiti",{"_index":249,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{}}}],["queu",{"_index":206,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["queue",{"_index":14,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["rc.10",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":250,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["readonli",{"_index":268,"title":{},"body":{"injectables/FireUploader.html":{}}}],["ref",{"_index":92,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["ref(id",{"_index":284,"title":{},"body":{"injectables/FireUploader.html":{}}}],["ref.t",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["reset",{"_index":79,"title":{},"body":{"classes/FileItem.html":{},"injectables/FireUploader.html":{},"modules/FireUploaderModule.html":{},"overview.html":{}}}],["reset(id",{"_index":287,"title":{},"body":{"injectables/FireUploader.html":{}}}],["resiz",{"_index":245,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["resizeheight",{"_index":248,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/variables.html":{}}}],["resizeimag",{"_index":129,"title":{},"body":{"classes/FileItem.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["resizeimage(item",{"_index":410,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resizeimage(thi",{"_index":150,"title":{},"body":{"classes/FileItem.html":{}}}],["resizemethod",{"_index":244,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["resizemethod.contain",{"_index":491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resizemethod.crop",{"_index":492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resizemimetyp",{"_index":253,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/variables.html":{}}}],["resizequ",{"_index":256,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/variables.html":{}}}],["resizewidth",{"_index":247,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/variables.html":{}}}],["restrict",{"_index":440,"title":{},"body":{"license.html":{}}}],["result",{"_index":60,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"modules/FireUploaderModule.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["resum",{"_index":80,"title":{},"body":{"classes/FileItem.html":{},"injectables/FireUploader.html":{}}}],["resume(id",{"_index":289,"title":{},"body":{"injectables/FireUploader.html":{}}}],["return",{"_index":104,"title":{},"body":{"classes/FileItem.html":{},"injectables/FireUploader.html":{},"modules/FireUploaderModule.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":443,"title":{},"body":{"license.html":{}}}],["root",{"_index":281,"title":{},"body":{"injectables/FireUploader.html":{}}}],["rout",{"_index":505,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["run",{"_index":183,"title":{},"body":{"classes/FileItem.html":{},"miscellaneous/functions.html":{}}}],["rxj",{"_index":125,"title":{},"body":{"classes/FileItem.html":{},"dependencies.html":{}}}],["select",{"_index":224,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{}}}],["selectfil",{"_index":363,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["selectfiles(accept",{"_index":413,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selector",{"_index":16,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["sell",{"_index":450,"title":{},"body":{"license.html":{}}}],["servic",{"_index":264,"title":{},"body":{"injectables/FireUploader.html":{},"modules/FireUploaderModule.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":276,"title":{},"body":{"injectables/FireUploader.html":{}}}],["setconfig",{"_index":271,"title":{},"body":{"injectables/FireUploader.html":{}}}],["setconfig(config",{"_index":291,"title":{},"body":{"injectables/FireUploader.html":{}}}],["shall",{"_index":458,"title":{},"body":{"license.html":{}}}],["size",{"_index":204,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["snapshot",{"_index":71,"title":{},"body":{"classes/FileItem.html":{}}}],["snapshot.bytestransf",{"_index":184,"title":{},"body":{"classes/FileItem.html":{}}}],["snapshot.downloadurl",{"_index":188,"title":{},"body":{"classes/FileItem.html":{}}}],["snapshot.ref",{"_index":189,"title":{},"body":{"classes/FileItem.html":{}}}],["snapshot.st",{"_index":182,"title":{},"body":{"classes/FileItem.html":{}}}],["snapshot.totalbyt",{"_index":185,"title":{},"body":{"classes/FileItem.html":{}}}],["softwar",{"_index":436,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"modules/FireUploaderModule.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["sousli",{"_index":427,"title":{},"body":{"license.html":{}}}],["splice",{"_index":404,"title":{},"body":{"miscellaneous/functions.html":{}}}],["start",{"_index":233,"title":{"index.html":{},"license.html":{}},"body":{"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["start(id",{"_index":293,"title":{},"body":{"injectables/FireUploader.html":{}}}],["state",{"_index":96,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["statement",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":335,"title":{},"body":{"modules/FireUploaderModule.html":{}}}],["still",{"_index":418,"title":{},"body":{"index.html":{}}}],["storag",{"_index":216,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"modules/FireUploaderModule.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{}}}],["store",{"_index":209,"title":{},"body":{"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["stream",{"_index":23,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{}}}],["string",{"_index":195,"title":{},"body":{"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":453,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":448,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":155,"title":{},"body":{"classes/FileItem.html":{}}}],["subscribe((snapshot",{"_index":164,"title":{},"body":{"classes/FileItem.html":{}}}],["substanti",{"_index":459,"title":{},"body":{"license.html":{}}}],["support",{"_index":483,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":484,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":103,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["then((snapshot",{"_index":166,"title":{},"body":{"classes/FileItem.html":{}}}],["this._instances[id",{"_index":305,"title":{},"body":{"injectables/FireUploader.html":{}}}],["this._instances[id].addfil",{"_index":311,"title":{},"body":{"injectables/FireUploader.html":{}}}],["this._instances[id].cancel",{"_index":313,"title":{},"body":{"injectables/FireUploader.html":{}}}],["this._instances[id].reset",{"_index":312,"title":{},"body":{"injectables/FireUploader.html":{}}}],["this._instances[id].resum",{"_index":314,"title":{},"body":{"injectables/FireUploader.html":{}}}],["this._instances[id].setconfig(config",{"_index":309,"title":{},"body":{"injectables/FireUploader.html":{}}}],["this._instances[id].start",{"_index":310,"title":{},"body":{"injectables/FireUploader.html":{}}}],["this._storag",{"_index":308,"title":{},"body":{"injectables/FireUploader.html":{}}}],["this._task",{"_index":162,"title":{},"body":{"classes/FileItem.html":{}}}],["this._task.cancel",{"_index":175,"title":{},"body":{"classes/FileItem.html":{}}}],["this._task.paus",{"_index":173,"title":{},"body":{"classes/FileItem.html":{}}}],["this._task.resum",{"_index":174,"title":{},"body":{"classes/FileItem.html":{}}}],["this._task.snapshotchang",{"_index":163,"title":{},"body":{"classes/FileItem.html":{}}}],["this._uploader.config.thumb",{"_index":148,"title":{},"body":{"classes/FileItem.html":{}}}],["this._uploader.config.thumbheight",{"_index":152,"title":{},"body":{"classes/FileItem.html":{}}}],["this._uploader.config.thumbmethod",{"_index":153,"title":{},"body":{"classes/FileItem.html":{}}}],["this._uploader.config.thumbwidth",{"_index":151,"title":{},"body":{"classes/FileItem.html":{}}}],["this._uploader.error$.next(err",{"_index":161,"title":{},"body":{"classes/FileItem.html":{}}}],["this._uploader.remove$.next(thi",{"_index":171,"title":{},"body":{"classes/FileItem.html":{}}}],["this._uploader.success$.next(thi",{"_index":190,"title":{},"body":{"classes/FileItem.html":{}}}],["this._uploader.updaterootstate$.next(nul",{"_index":187,"title":{},"body":{"classes/FileItem.html":{}}}],["this.cancel",{"_index":172,"title":{},"body":{"classes/FileItem.html":{}}}],["this.config",{"_index":304,"title":{},"body":{"injectables/FireUploader.html":{}}}],["this.dragover.emit(fals",{"_index":53,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["this.dragover.emit(tru",{"_index":57,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["this.dropzone.emit(e.datatransfer.fil",{"_index":54,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["this.file.s",{"_index":179,"title":{},"body":{"classes/FileItem.html":{}}}],["this.onsnapshotchanges(snapshot",{"_index":165,"title":{},"body":{"classes/FileItem.html":{}}}],["this.ontaskcomplete(snapshot",{"_index":167,"title":{},"body":{"classes/FileItem.html":{}}}],["this.reset",{"_index":176,"title":{},"body":{"classes/FileItem.html":{}}}],["this.snapshot",{"_index":180,"title":{},"body":{"classes/FileItem.html":{}}}],["this.snapshot$.next(this.snapshot",{"_index":181,"title":{},"body":{"classes/FileItem.html":{}}}],["this.snapshot.ref.delet",{"_index":170,"title":{},"body":{"classes/FileItem.html":{}}}],["this.updatesnapshot",{"_index":132,"title":{},"body":{"classes/FileItem.html":{}}}],["this.updatesnapshot({act",{"_index":169,"title":{},"body":{"classes/FileItem.html":{}}}],["this.updatesnapshot({thumbnail",{"_index":157,"title":{},"body":{"classes/FileItem.html":{}}}],["throw",{"_index":502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thumb",{"_index":236,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/variables.html":{}}}],["thumbheight",{"_index":241,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/variables.html":{}}}],["thumbmethod",{"_index":243,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":147,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["thumbwidth",{"_index":239,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":227,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{}}}],["token",{"_index":504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":479,"title":{},"body":{"license.html":{}}}],["total",{"_index":203,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["totalbyt",{"_index":143,"title":{},"body":{"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["transfer",{"_index":202,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["true",{"_index":489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":29,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":402,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniquenam",{"_index":221,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/variables.html":{}}}],["updat",{"_index":112,"title":{},"body":{"classes/FileItem.html":{}}}],["updatesnapshot",{"_index":81,"title":{},"body":{"classes/FileItem.html":{}}}],["updatesnapshot(snapshot",{"_index":120,"title":{},"body":{"classes/FileItem.html":{}}}],["upload",{"_index":13,"title":{},"body":{"directives/DropZoneDirective.html":{},"classes/FileItem.html":{},"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"modules/FireUploaderModule.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["uploader.default",{"_index":301,"title":{},"body":{"injectables/FireUploader.html":{}}}],["uploader.default.t",{"_index":351,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploader.model",{"_index":127,"title":{},"body":{"classes/FileItem.html":{},"injectables/FireUploader.html":{},"modules/FireUploaderModule.html":{}}}],["uploader.model.t",{"_index":193,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["uploader.module.t",{"_index":327,"title":{},"body":{"modules/FireUploaderModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["uploader.t",{"_index":262,"title":{},"body":{"injectables/FireUploader.html":{},"coverage.html":{}}}],["uploader.token",{"_index":299,"title":{},"body":{"injectables/FireUploader.html":{},"modules/FireUploaderModule.html":{}}}],["uploader.token.t",{"_index":357,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploader.ts:15",{"_index":296,"title":{},"body":{"injectables/FireUploader.html":{}}}],["uploader.ts:18",{"_index":275,"title":{},"body":{"injectables/FireUploader.html":{}}}],["uploader.ts:26",{"_index":285,"title":{},"body":{"injectables/FireUploader.html":{}}}],["uploader.ts:36",{"_index":292,"title":{},"body":{"injectables/FireUploader.html":{}}}],["uploader.ts:43",{"_index":294,"title":{},"body":{"injectables/FireUploader.html":{}}}],["uploader.ts:50",{"_index":279,"title":{},"body":{"injectables/FireUploader.html":{}}}],["uploader.ts:57",{"_index":288,"title":{},"body":{"injectables/FireUploader.html":{}}}],["uploader.ts:64",{"_index":283,"title":{},"body":{"injectables/FireUploader.html":{}}}],["uploader.ts:71",{"_index":290,"title":{},"body":{"injectables/FireUploader.html":{}}}],["uploader/count_limit_exceed",{"_index":495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploader/size_limit_exceed",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploader_config",{"_index":298,"title":{},"body":{"injectables/FireUploader.html":{},"modules/FireUploaderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploaderfactori",{"_index":339,"title":{},"body":{"modules/FireUploaderModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["uploaderfactory(config",{"_index":333,"title":{},"body":{"modules/FireUploaderModule.html":{},"miscellaneous/functions.html":{}}}],["uploaderprogress",{"_index":198,"title":{"interfaces/UploaderProgress.html":{}},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"coverage.html":{}}}],["uploaderst",{"_index":205,"title":{"interfaces/UploaderState.html":{}},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"coverage.html":{}}}],["uploadtasksnapshot",{"_index":110,"title":{},"body":{"classes/FileItem.html":{}}}],["url",{"_index":197,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{}}}],["us",{"_index":242,"title":{},"body":{"interfaces/FileSnapshot.html":{},"injectables/FireUploader.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"license.html":{}}}],["usefactori",{"_index":338,"title":{},"body":{"modules/FireUploaderModule.html":{}}}],["user",{"_index":25,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["usevalu",{"_index":337,"title":{},"body":{"modules/FireUploaderModule.html":{}}}],["util",{"_index":130,"title":{},"body":{"classes/FileItem.html":{}}}],["valu",{"_index":98,"title":{},"body":{"classes/FileItem.html":{},"injectables/FireUploader.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":352,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":107,"title":{},"body":{"classes/FileItem.html":{},"injectables/FireUploader.html":{}}}],["warranti",{"_index":461,"title":{},"body":{"license.html":{}}}],["whether",{"_index":476,"title":{},"body":{"license.html":{}}}],["width",{"_index":237,"title":{},"body":{"interfaces/FileSnapshot.html":{},"interfaces/FireUploaderConfig.html":{},"interfaces/UploaderProgress.html":{},"interfaces/UploaderState.html":{},"miscellaneous/functions.html":{}}}],["wiki",{"_index":420,"title":{},"body":{"index.html":{}}}],["window.url.createobjecturl(blob",{"_index":158,"title":{},"body":{"classes/FileItem.html":{}}}],["wip",{"_index":419,"title":{},"body":{"index.html":{}}}],["without",{"_index":439,"title":{},"body":{"license.html":{}}}],["ye",{"_index":286,"title":{},"body":{"injectables/FireUploader.html":{}}}],["zone",{"_index":11,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["zone.direct",{"_index":331,"title":{},"body":{"modules/FireUploaderModule.html":{}}}],["zone.directive.t",{"_index":6,"title":{},"body":{"directives/DropZoneDirective.html":{},"coverage.html":{}}}],["zone.directive.ts:11",{"_index":33,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["zone.directive.ts:14",{"_index":32,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["zone.directive.ts:18",{"_index":43,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["zone.directive.ts:26",{"_index":40,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["zone.directive.ts:33",{"_index":37,"title":{},"body":{"directives/DropZoneDirective.html":{}}}],["zone.j",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":325,"title":{},"body":{"modules/FireUploaderModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/DropZoneDirective.html":{"url":"directives/DropZoneDirective.html","title":"directive - DropZoneDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DropZoneDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/drop-zone.directive.ts\n        \n\n            \n                Description\n            \n            \n                Convert element to a drop zone to add files to uploader queue\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dropZone]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragOver\n                            \n                            \n                                dropZone\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        dragOver\n                    \n                    \n                        Stream that emits when user drag over \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/drop-zone.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dropZone\n                    \n                    \n                        Stream that emits when files are dropped \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/drop-zone.directive.ts:11\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            dragleave\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragleave(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/drop-zone.directive.ts:33\n                            \n                        \n\n\n                \n                    \n                            Listen to dragleave event \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragover(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/drop-zone.directive.ts:26\n                            \n                        \n\n\n                \n                    \n                            Listen to dragover event \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drop\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndrop(e: DragEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/drop-zone.directive.ts:18\n                            \n                        \n\n\n                \n                    \n                            Listen to drop event \n\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n/**\n * Convert element to a drop zone to add files to uploader queue\n */\n@Directive({\n  selector: '[dropZone]'\n})\nexport class DropZoneDirective {\n\n  /** Stream that emits when files are dropped */\n  @Output('dropZone') dropZone = new EventEmitter();\n\n  /** Stream that emits when user drag over */\n  @Output() dragOver = new EventEmitter();\n\n  /** Listen to drop event */\n  @HostListener('drop', ['$event'])\n  onDrop(e: DragEvent) {\n    e.preventDefault();\n    this.dragOver.emit(false);\n    this.dropZone.emit(e.dataTransfer.files);\n  }\n\n  /** Listen to dragover event */\n  @HostListener('dragover', ['$event'])\n  onDragOver(e) {\n    e.preventDefault();\n    this.dragOver.emit(true);\n  }\n\n  /** Listen to dragleave event */\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(e) {\n    e.preventDefault();\n    this.dragOver.emit(false);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileItem.html":{"url":"classes/FileItem.html","title":"class - FileItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/file-item.ts\n        \n\n            \n                Description\n            \n            \n                FileItem class for each file added in the queue\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _task\n                            \n                            \n                                    Public\n                                file\n                            \n                            \n                                snapshot\n                            \n                            \n                                snapshot$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                assignTask\n                            \n                            \n                                cancel\n                            \n                            \n                                delete\n                            \n                            \n                                    Private\n                                onSnapshotChanges\n                            \n                            \n                                    Private\n                                onTaskComplete\n                            \n                            \n                                pause\n                            \n                            \n                                reset\n                            \n                            \n                                resume\n                            \n                            \n                                    Private\n                                updateSnapshot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(file: File, _uploader: FireUploaderRef)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/file-item.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                  \n                                                        \n                                                                    File\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _uploader\n                                                  \n                                                        \n                                                                    FireUploaderRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _task\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _task:     AngularFireUploadTask\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireUploadTask\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/file-item.ts:14\n                            \n                        \n\n                \n                    \n                        AngularFireUploadTask ref \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            file\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        file:     File\n\n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/file-item.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            snapshot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snapshot:     FileSnapshot\n\n                    \n                \n                    \n                        \n                            Type :     FileSnapshot\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/file-item.ts:17\n                            \n                        \n\n                \n                    \n                        FileItem state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            snapshot$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snapshot$:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({})\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/file-item.ts:20\n                            \n                        \n\n                \n                    \n                        Stream that emits FileItem state \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            assignTask\n                            \n                            \n                        \n                    \n                \n                \n                    \nassignTask(task: AngularFireUploadTask)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/file-item.ts:48\n                            \n                        \n\n\n                \n                    \n                            Assign AngularFireUploadTask to FileItem \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                        \n                                                                    AngularFireUploadTask\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/file-item.ts:87\n                            \n                        \n\n\n                \n                    \n                            Cancel upload task \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/file-item.ts:63\n                            \n                        \n\n\n                \n                    \n                            Delete file after it is uploaded \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onSnapshotChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onSnapshotChanges(snapshot: UploadTaskSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/file-item.ts:115\n                            \n                        \n\n\n                \n                    \n                            Update state when UploadTaskSnapshot changes \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snapshot\n                                                        \n                                                                    UploadTaskSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onTaskComplete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onTaskComplete(snapshot: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/file-item.ts:129\n                            \n                        \n\n\n                \n                    \n                            Update state when UploadTaskSnapshot completes \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snapshot\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pause\n                            \n                            \n                        \n                    \n                \n                \n                    \npause()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/file-item.ts:73\n                            \n                        \n\n\n                \n                    \n                            Pause upload task \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/file-item.ts:95\n                            \n                        \n\n\n                \n                    \n                            Reset FileItem state \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resume\n                            \n                            \n                        \n                    \n                \n                \n                    \nresume()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/file-item.ts:80\n                            \n                        \n\n\n                \n                    \n                            Resume upload task \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSnapshot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateSnapshot(snapshot: FileSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/file-item.ts:109\n                            \n                        \n\n\n                \n                    \n                            Update local state \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snapshot\n                                                        \n                                                                    FileSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AngularFireUploadTask } from 'angularfire2/storage';\nimport { UploadTaskSnapshot } from 'angularfire2/storage/interfaces';\nimport { BehaviorSubject } from 'rxjs';\nimport { FileSnapshot } from './fire-uploader.model';\nimport { FireUploaderRef } from './fire-uploader-ref';\nimport { isImage, resizeImage } from './utils';\n\n/**\n * FileItem class for each file added in the queue\n */\nexport class FileItem {\n\n  /** AngularFireUploadTask ref */\n  private _task: AngularFireUploadTask;\n\n  /** FileItem state */\n  snapshot: FileSnapshot;\n\n  /** Stream that emits FileItem state */\n  snapshot$ = new BehaviorSubject({});\n\n  constructor(public file: File, private _uploader: FireUploaderRef) {\n\n    this.updateSnapshot({\n      name: file.name,\n      type: file.type,\n      active: false,\n      extension: file.name.split('.').pop(),\n      progress: {\n        percentage: 0,\n        bytesTransferred: 0,\n        totalBytes: file.size\n      }\n    });\n\n    // If file is type of image, create a thumbnail\n    if (this._uploader.config.thumbs && isImage(file)) {\n\n      resizeImage(this, this._uploader.config.thumbWidth, this._uploader.config.thumbHeight, this._uploader.config.thumbMethod, 1)\n        .subscribe(\n          (blob: Blob) => this.updateSnapshot({thumbnail: window.URL.createObjectURL(blob)}),\n          (err: Error) => this._uploader.error$.next(err)\n        );\n    }\n  }\n\n  /** Assign AngularFireUploadTask to FileItem */\n  assignTask(task: AngularFireUploadTask): Promise {\n    this._task = task;\n\n    this._task.snapshotChanges()\n      .subscribe((snapshot: UploadTaskSnapshot) => this.onSnapshotChanges(snapshot));\n\n    return this._task\n      .then((snapshot: any) => this.onTaskComplete(snapshot))\n      .catch((err: Error) => {\n        this.updateSnapshot({active: false});\n        this._uploader.error$.next(err);\n      });\n  }\n\n  /** Delete file after it is uploaded */\n  delete() {\n    this.snapshot.ref.delete()\n      .then(() => {\n        this._uploader.remove$.next(this);\n        this.cancel();\n      })\n      .catch((err) => this._uploader.error$.next(err));\n  }\n\n  /** Pause upload task */\n  pause() {\n    if (this._task) {\n      this._task.pause();\n    }\n  }\n\n  /** Resume upload task */\n  resume() {\n    if (this._task) {\n      this._task.resume();\n    }\n  }\n\n  /** Cancel upload task */\n  cancel() {\n    if (this._task) {\n      this._task.cancel();\n    }\n    this.reset();\n  }\n\n  /** Reset FileItem state */\n  reset() {\n    this.updateSnapshot({\n      state: null,\n      active: false,\n      downloadURL: null,\n      progress: {\n        percentage: 0,\n        bytesTransferred: 0,\n        totalBytes: this.file.size\n      }\n    });\n  }\n\n  /** Update local state */\n  private updateSnapshot(snapshot: FileSnapshot) {\n    this.snapshot = {...this.snapshot, ...snapshot};\n    this.snapshot$.next(this.snapshot);\n  }\n\n  /** Update state when UploadTaskSnapshot changes */\n  private onSnapshotChanges(snapshot: UploadTaskSnapshot) {\n    this.updateSnapshot({\n      active: snapshot.state === 'running',\n      state: snapshot.state,\n      progress: {\n        percentage: (snapshot.bytesTransferred / snapshot.totalBytes) * 100,\n        bytesTransferred: snapshot.bytesTransferred,\n        totalBytes: snapshot.totalBytes\n      }\n    });\n    this._uploader.updateRootState$.next(null);\n  }\n\n  /** Update state when UploadTaskSnapshot completes */\n  private onTaskComplete(snapshot: any) {\n    if (snapshot.downloadURL) {\n      this.updateSnapshot({\n        downloadURL: snapshot.downloadURL,\n        ref: snapshot.ref,\n        active: false,\n        state: snapshot.state,\n        progress: {\n          percentage: (snapshot.bytesTransferred / snapshot.totalBytes) * 100,\n          bytesTransferred: snapshot.bytesTransferred,\n          totalBytes: snapshot.totalBytes\n        }\n      });\n      this._uploader.success$.next(this);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileSnapshot.html":{"url":"interfaces/FileSnapshot.html","title":"interface - FileSnapshot","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileSnapshot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/fire-uploader.model.ts\n        \n\n            \n                Description\n            \n            \n                FileItem state \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        downloadURL\n                                \n                                \n                                            Optional\n                                        extension\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        progress\n                                \n                                \n                                            Optional\n                                        ref\n                                \n                                \n                                            Optional\n                                        state\n                                \n                                \n                                            Optional\n                                        thumbnail\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    File upload task state \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadURL\n                                    \n                                \n                                \n                                    \n                                        downloadURL:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    File download URL if it has been uploaded \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extension\n                                    \n                                \n                                \n                                    \n                                        extension:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    File extension \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    File name \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                    \n                                \n                                \n                                    \n                                        progress:     UploaderProgress\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UploaderProgress\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    File upload progress \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                    \n                                \n                                \n                                    \n                                        ref:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Uploader ref \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    File state \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                    \n                                \n                                \n                                    \n                                        thumbnail:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If file is an image, this will be the image thumbnail \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    File type \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FileItem } from './file-item';\n\n/** Upload progress state */\nexport interface UploaderProgress {\n  /** Progress percentage */\n  percentage?: number;\n  /** Bytes transferred */\n  bytesTransferred?: number;\n  /** Total size in bytes */\n  totalBytes?: number;\n}\n\n/** Uploader state */\nexport interface UploaderState {\n  /** Queued files */\n  files?: FileItem[];\n  /** Total upload progress */\n  progress?: UploaderProgress;\n  /** Uploader active state */\n  active?: boolean;\n}\n\n/** FileItem state */\nexport interface FileSnapshot {\n  /** Uploader ref */\n  ref?: any;\n  /** File name */\n  name?: string;\n  /** File type */\n  type?: string;\n  /** File extension */\n  extension?: string;\n  /** File upload progress */\n  progress?: UploaderProgress;\n  /** If file is an image, this will be the image thumbnail */\n  thumbnail?: string;\n  /** File download URL if it has been uploaded */\n  downloadURL?: string;\n  /** File upload task state */\n  active?: boolean;\n  /** File state */\n  state?: string;\n}\n\n/** Uploader config */\nexport interface FireUploaderConfig {\n  /** Stores file in directory, e.g. photos/{FileName}. */\n  paramDir?: string;\n  /** Stores file with custom name in the firebase storage. */\n  paramName?: string;\n  /** Adds current date to file's name. */\n  uniqueName?: boolean;\n  /** Enables multiple file select. */\n  multiple?: boolean;\n  /** The accepted files types. */\n  accept?: string;\n  /** Maximum number of files uploading at a time. */\n  parallelUploads?: number;\n  /** Maximum files count in the queue. */\n  maxFiles?: number;\n  /** Maximum file size in MB. */\n  maxFileSize?: number;\n  /** Starts uploading on file select. */\n  autoStart?: boolean;\n  /** Generate thumbnails for image files. */\n  thumbs?: boolean;\n  /** Thumbnail width in px. */\n  thumbWidth?: number;\n  /** Thumbnail height in px. */\n  thumbHeight?: number;\n  /** The method used to generate the thumbnails. */\n  thumbMethod?: ResizeMethod;\n  /** The method used to resize the images before uploading. */\n  resizeMethod?: ResizeMethod;\n  /** Image new width in px. */\n  resizeWidth?: number;\n  /** Image new height in px. */\n  resizeHeight?: number;\n  /** Quality of re-sized image between 0 and 1 (not on Edge). */\n  resizeMimeType?: string;\n  /** The mime type of the resized image e.g. image/jpeg. */\n  resizeQuality?: number;\n}\n\n/** Resize method options */\nexport enum ResizeMethod {\n  Crop = 'crop',\n  Contain = 'contain'\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FireUploader.html":{"url":"injectables/FireUploader.html","title":"injectable - FireUploader","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FireUploader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/fire-uploader.ts\n        \n\n            \n                Description\n            \n            \n                FireUploader global service that can be used to access FireUploaderRef anywhere in the app\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _instances\n                            \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFiles\n                            \n                            \n                                cancel\n                            \n                            \n                                ref\n                            \n                            \n                                reset\n                            \n                            \n                                resume\n                            \n                            \n                                setConfig\n                            \n                            \n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: FireUploaderConfig, _storage: AngularFireStorage)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/fire-uploader.ts:18\n                            \n                        \n\n                \n                    \n                            Set default global config \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    FireUploaderConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _storage\n                                                  \n                                                        \n                                                                    AngularFireStorage\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \naddFiles(files: FileItem[], id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/fire-uploader.ts:50\n                            \n                        \n\n\n                \n                    \n                            Add files manually \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileItem[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'root'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/fire-uploader.ts:64\n                            \n                        \n\n\n                \n                    \n                            Cancel uploading task \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'root'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ref\n                            \n                            \n                        \n                    \n                \n                \n                    \nref(id: string, config?: FireUploaderConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/fire-uploader.ts:26\n                            \n                        \n\n\n                \n                    \n                            Get a FireUploaderRef \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'root'\n                                                        \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    FireUploaderConfig\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FireUploaderRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/fire-uploader.ts:57\n                            \n                        \n\n\n                \n                    \n                            Reset uploader state \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'root'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resume\n                            \n                            \n                        \n                    \n                \n                \n                    \nresume(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/fire-uploader.ts:71\n                            \n                        \n\n\n                \n                    \n                            Resume uploading task \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'root'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetConfig(config: FireUploaderConfig, id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/fire-uploader.ts:36\n                            \n                        \n\n\n                \n                    \n                            Set config \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    FireUploaderConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'root'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \nstart(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/fire-uploader.ts:43\n                            \n                        \n\n\n                \n                    \n                            Start uploading task \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'root'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _instances\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _instances:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/fire-uploader.ts:15\n                            \n                        \n\n                \n                    \n                        Stores FireUploaderRef instances \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     FireUploaderConfig\n\n                    \n                \n                    \n                        \n                            Type :     FireUploaderConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/fire-uploader.ts:18\n                            \n                        \n\n                \n                    \n                        Global default config \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport { AngularFireStorage } from 'angularfire2/storage';\nimport { FireUploaderConfig } from './fire-uploader.model';\nimport { UPLOADER_CONFIG } from './fire-uploader.token';\nimport { DEFAULT_CONFIG } from './fire-uploader.default';\nimport { FireUploaderRef } from './fire-uploader-ref';\nimport { FileItem } from './file-item';\n\n/**\n * FireUploader global service that can be used to access FireUploaderRef anywhere in the app\n */\n@Injectable()\nexport class FireUploader {\n  /** Stores FireUploaderRef instances */\n  private readonly _instances = {};\n\n  /** Global default config */\n  config: FireUploaderConfig;\n\n  /** Set default global config */\n  constructor(@Optional() @Inject(UPLOADER_CONFIG)config: FireUploaderConfig, private _storage: AngularFireStorage) {\n    this.config = {...DEFAULT_CONFIG, ...config};\n  }\n\n  /** Get a FireUploaderRef */\n  ref(id = 'root', config?: FireUploaderConfig): FireUploaderRef {\n    if (this._instances[id] instanceof FireUploaderRef) {\n      return this._instances[id];\n    } else {\n      config = {...this.config, ...config};\n      return (this._instances[id] = new FireUploaderRef(config, this._storage));\n    }\n  }\n\n  /** Set config */\n  setConfig(config: FireUploaderConfig, id = 'root') {\n    if (this._instances[id] instanceof FireUploaderRef) {\n      this._instances[id].setConfig(config);\n    }\n  }\n\n  /** Start uploading task */\n  start(id = 'root') {\n    if (this._instances[id] instanceof FireUploaderRef) {\n      this._instances[id].start();\n    }\n  }\n\n  /** Add files manually */\n  addFiles(files: FileItem[], id = 'root') {\n    if (this._instances[id] instanceof FireUploaderRef) {\n      this._instances[id].addFiles();\n    }\n  }\n\n  /** Reset uploader state */\n  reset(id = 'root') {\n    if (this._instances[id] instanceof FireUploaderRef) {\n      this._instances[id].reset();\n    }\n  }\n\n  /** Cancel uploading task */\n  cancel(id = 'root') {\n    if (this._instances[id] instanceof FireUploaderRef) {\n      this._instances[id].cancel();\n    }\n  }\n\n  /** Resume uploading task */\n  resume(id = 'root') {\n    if (this._instances[id] instanceof FireUploaderRef) {\n      this._instances[id].resume();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FireUploaderConfig.html":{"url":"interfaces/FireUploaderConfig.html","title":"interface - FireUploaderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FireUploaderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/fire-uploader.model.ts\n        \n\n            \n                Description\n            \n            \n                Uploader config \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accept\n                                \n                                \n                                            Optional\n                                        autoStart\n                                \n                                \n                                            Optional\n                                        maxFiles\n                                \n                                \n                                            Optional\n                                        maxFileSize\n                                \n                                \n                                            Optional\n                                        multiple\n                                \n                                \n                                            Optional\n                                        parallelUploads\n                                \n                                \n                                            Optional\n                                        paramDir\n                                \n                                \n                                            Optional\n                                        paramName\n                                \n                                \n                                            Optional\n                                        resizeHeight\n                                \n                                \n                                            Optional\n                                        resizeMethod\n                                \n                                \n                                            Optional\n                                        resizeMimeType\n                                \n                                \n                                            Optional\n                                        resizeQuality\n                                \n                                \n                                            Optional\n                                        resizeWidth\n                                \n                                \n                                            Optional\n                                        thumbHeight\n                                \n                                \n                                            Optional\n                                        thumbMethod\n                                \n                                \n                                            Optional\n                                        thumbs\n                                \n                                \n                                            Optional\n                                        thumbWidth\n                                \n                                \n                                            Optional\n                                        uniqueName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accept\n                                    \n                                \n                                \n                                    \n                                        accept:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The accepted files types. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoStart\n                                    \n                                \n                                \n                                    \n                                        autoStart:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Starts uploading on file select. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxFiles\n                                    \n                                \n                                \n                                    \n                                        maxFiles:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximum files count in the queue. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxFileSize\n                                    \n                                \n                                \n                                    \n                                        maxFileSize:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximum file size in MB. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiple\n                                    \n                                \n                                \n                                    \n                                        multiple:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Enables multiple file select. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parallelUploads\n                                    \n                                \n                                \n                                    \n                                        parallelUploads:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximum number of files uploading at a time. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paramDir\n                                    \n                                \n                                \n                                    \n                                        paramDir:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Stores file in directory, e.g. photos/{FileName}. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paramName\n                                    \n                                \n                                \n                                    \n                                        paramName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Stores file with custom name in the firebase storage. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeHeight\n                                    \n                                \n                                \n                                    \n                                        resizeHeight:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Image new height in px. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeMethod\n                                    \n                                \n                                \n                                    \n                                        resizeMethod:     ResizeMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResizeMethod\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method used to resize the images before uploading. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeMimeType\n                                    \n                                \n                                \n                                    \n                                        resizeMimeType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Quality of re-sized image between 0 and 1 (not on Edge). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeQuality\n                                    \n                                \n                                \n                                    \n                                        resizeQuality:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The mime type of the resized image e.g. image/jpeg. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeWidth\n                                    \n                                \n                                \n                                    \n                                        resizeWidth:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Image new width in px. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbHeight\n                                    \n                                \n                                \n                                    \n                                        thumbHeight:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Thumbnail height in px. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbMethod\n                                    \n                                \n                                \n                                    \n                                        thumbMethod:     ResizeMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResizeMethod\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method used to generate the thumbnails. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbs\n                                    \n                                \n                                \n                                    \n                                        thumbs:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Generate thumbnails for image files. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbWidth\n                                    \n                                \n                                \n                                    \n                                        thumbWidth:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Thumbnail width in px. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uniqueName\n                                    \n                                \n                                \n                                    \n                                        uniqueName:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Adds current date to file's name. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FileItem } from './file-item';\n\n/** Upload progress state */\nexport interface UploaderProgress {\n  /** Progress percentage */\n  percentage?: number;\n  /** Bytes transferred */\n  bytesTransferred?: number;\n  /** Total size in bytes */\n  totalBytes?: number;\n}\n\n/** Uploader state */\nexport interface UploaderState {\n  /** Queued files */\n  files?: FileItem[];\n  /** Total upload progress */\n  progress?: UploaderProgress;\n  /** Uploader active state */\n  active?: boolean;\n}\n\n/** FileItem state */\nexport interface FileSnapshot {\n  /** Uploader ref */\n  ref?: any;\n  /** File name */\n  name?: string;\n  /** File type */\n  type?: string;\n  /** File extension */\n  extension?: string;\n  /** File upload progress */\n  progress?: UploaderProgress;\n  /** If file is an image, this will be the image thumbnail */\n  thumbnail?: string;\n  /** File download URL if it has been uploaded */\n  downloadURL?: string;\n  /** File upload task state */\n  active?: boolean;\n  /** File state */\n  state?: string;\n}\n\n/** Uploader config */\nexport interface FireUploaderConfig {\n  /** Stores file in directory, e.g. photos/{FileName}. */\n  paramDir?: string;\n  /** Stores file with custom name in the firebase storage. */\n  paramName?: string;\n  /** Adds current date to file's name. */\n  uniqueName?: boolean;\n  /** Enables multiple file select. */\n  multiple?: boolean;\n  /** The accepted files types. */\n  accept?: string;\n  /** Maximum number of files uploading at a time. */\n  parallelUploads?: number;\n  /** Maximum files count in the queue. */\n  maxFiles?: number;\n  /** Maximum file size in MB. */\n  maxFileSize?: number;\n  /** Starts uploading on file select. */\n  autoStart?: boolean;\n  /** Generate thumbnails for image files. */\n  thumbs?: boolean;\n  /** Thumbnail width in px. */\n  thumbWidth?: number;\n  /** Thumbnail height in px. */\n  thumbHeight?: number;\n  /** The method used to generate the thumbnails. */\n  thumbMethod?: ResizeMethod;\n  /** The method used to resize the images before uploading. */\n  resizeMethod?: ResizeMethod;\n  /** Image new width in px. */\n  resizeWidth?: number;\n  /** Image new height in px. */\n  resizeHeight?: number;\n  /** Quality of re-sized image between 0 and 1 (not on Edge). */\n  resizeMimeType?: string;\n  /** The mime type of the resized image e.g. image/jpeg. */\n  resizeQuality?: number;\n}\n\n/** Resize method options */\nexport enum ResizeMethod {\n  Crop = 'crop',\n  Contain = 'contain'\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FireUploaderModule.html":{"url":"modules/FireUploaderModule.html","title":"module - FireUploaderModule","body":"\n                   \n\n\n\n\n  Modules\n  FireUploaderModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FireUploaderModule\n\n\n\ncluster_FireUploaderModule_declarations\n\n\n\ncluster_FireUploaderModule_exports\n\n\n\n\nDropZoneDirective\n\nDropZoneDirective\n\n\n\nFireUploaderModule\n\nFireUploaderModule\n\nFireUploaderModule -->\n\nDropZoneDirective->FireUploaderModule\n\n\n\n\n\nDropZoneDirective \n\nDropZoneDirective \n\nDropZoneDirective  -->\n\nFireUploaderModule->DropZoneDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/core/src/lib/fire-uploader.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DropZoneDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DropZoneDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { AngularFireStorageModule, AngularFireStorage } from 'angularfire2/storage';\n\nimport { FireUploader } from './fire-uploader';\nimport { FireUploaderConfig } from './fire-uploader.model';\nimport { UPLOADER_CONFIG } from './fire-uploader.token';\nimport { DropZoneDirective } from './drop-zone.directive';\n\n/** Create a FireUploader service */\nexport function UploaderFactory(config: FireUploaderConfig, storage: AngularFireStorage) {\n  return new FireUploader(config, storage);\n}\n\n@NgModule({\n  imports: [AngularFireStorageModule],\n  declarations: [DropZoneDirective],\n  exports: [DropZoneDirective]\n})\nexport class FireUploaderModule {\n  static forRoot(config?: FireUploaderConfig): ModuleWithProviders {\n    return {\n      ngModule: FireUploaderModule,\n      providers: [\n        {provide: UPLOADER_CONFIG, useValue: config},\n        {\n          provide: FireUploader,\n          useFactory: UploaderFactory,\n          deps: [UPLOADER_CONFIG, AngularFireStorage]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploaderProgress.html":{"url":"interfaces/UploaderProgress.html","title":"interface - UploaderProgress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploaderProgress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/fire-uploader.model.ts\n        \n\n            \n                Description\n            \n            \n                Upload progress state \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bytesTransferred\n                                \n                                \n                                            Optional\n                                        percentage\n                                \n                                \n                                            Optional\n                                        totalBytes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bytesTransferred\n                                    \n                                \n                                \n                                    \n                                        bytesTransferred:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Bytes transferred \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percentage\n                                    \n                                \n                                \n                                    \n                                        percentage:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Progress percentage \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalBytes\n                                    \n                                \n                                \n                                    \n                                        totalBytes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Total size in bytes \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FileItem } from './file-item';\n\n/** Upload progress state */\nexport interface UploaderProgress {\n  /** Progress percentage */\n  percentage?: number;\n  /** Bytes transferred */\n  bytesTransferred?: number;\n  /** Total size in bytes */\n  totalBytes?: number;\n}\n\n/** Uploader state */\nexport interface UploaderState {\n  /** Queued files */\n  files?: FileItem[];\n  /** Total upload progress */\n  progress?: UploaderProgress;\n  /** Uploader active state */\n  active?: boolean;\n}\n\n/** FileItem state */\nexport interface FileSnapshot {\n  /** Uploader ref */\n  ref?: any;\n  /** File name */\n  name?: string;\n  /** File type */\n  type?: string;\n  /** File extension */\n  extension?: string;\n  /** File upload progress */\n  progress?: UploaderProgress;\n  /** If file is an image, this will be the image thumbnail */\n  thumbnail?: string;\n  /** File download URL if it has been uploaded */\n  downloadURL?: string;\n  /** File upload task state */\n  active?: boolean;\n  /** File state */\n  state?: string;\n}\n\n/** Uploader config */\nexport interface FireUploaderConfig {\n  /** Stores file in directory, e.g. photos/{FileName}. */\n  paramDir?: string;\n  /** Stores file with custom name in the firebase storage. */\n  paramName?: string;\n  /** Adds current date to file's name. */\n  uniqueName?: boolean;\n  /** Enables multiple file select. */\n  multiple?: boolean;\n  /** The accepted files types. */\n  accept?: string;\n  /** Maximum number of files uploading at a time. */\n  parallelUploads?: number;\n  /** Maximum files count in the queue. */\n  maxFiles?: number;\n  /** Maximum file size in MB. */\n  maxFileSize?: number;\n  /** Starts uploading on file select. */\n  autoStart?: boolean;\n  /** Generate thumbnails for image files. */\n  thumbs?: boolean;\n  /** Thumbnail width in px. */\n  thumbWidth?: number;\n  /** Thumbnail height in px. */\n  thumbHeight?: number;\n  /** The method used to generate the thumbnails. */\n  thumbMethod?: ResizeMethod;\n  /** The method used to resize the images before uploading. */\n  resizeMethod?: ResizeMethod;\n  /** Image new width in px. */\n  resizeWidth?: number;\n  /** Image new height in px. */\n  resizeHeight?: number;\n  /** Quality of re-sized image between 0 and 1 (not on Edge). */\n  resizeMimeType?: string;\n  /** The mime type of the resized image e.g. image/jpeg. */\n  resizeQuality?: number;\n}\n\n/** Resize method options */\nexport enum ResizeMethod {\n  Crop = 'crop',\n  Contain = 'contain'\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploaderState.html":{"url":"interfaces/UploaderState.html","title":"interface - UploaderState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploaderState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/fire-uploader.model.ts\n        \n\n            \n                Description\n            \n            \n                Uploader state \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        files\n                                \n                                \n                                            Optional\n                                        progress\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Uploader active state \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                    \n                                \n                                \n                                    \n                                        files:     FileItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Queued files \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                    \n                                \n                                \n                                    \n                                        progress:     UploaderProgress\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UploaderProgress\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Total upload progress \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FileItem } from './file-item';\n\n/** Upload progress state */\nexport interface UploaderProgress {\n  /** Progress percentage */\n  percentage?: number;\n  /** Bytes transferred */\n  bytesTransferred?: number;\n  /** Total size in bytes */\n  totalBytes?: number;\n}\n\n/** Uploader state */\nexport interface UploaderState {\n  /** Queued files */\n  files?: FileItem[];\n  /** Total upload progress */\n  progress?: UploaderProgress;\n  /** Uploader active state */\n  active?: boolean;\n}\n\n/** FileItem state */\nexport interface FileSnapshot {\n  /** Uploader ref */\n  ref?: any;\n  /** File name */\n  name?: string;\n  /** File type */\n  type?: string;\n  /** File extension */\n  extension?: string;\n  /** File upload progress */\n  progress?: UploaderProgress;\n  /** If file is an image, this will be the image thumbnail */\n  thumbnail?: string;\n  /** File download URL if it has been uploaded */\n  downloadURL?: string;\n  /** File upload task state */\n  active?: boolean;\n  /** File state */\n  state?: string;\n}\n\n/** Uploader config */\nexport interface FireUploaderConfig {\n  /** Stores file in directory, e.g. photos/{FileName}. */\n  paramDir?: string;\n  /** Stores file with custom name in the firebase storage. */\n  paramName?: string;\n  /** Adds current date to file's name. */\n  uniqueName?: boolean;\n  /** Enables multiple file select. */\n  multiple?: boolean;\n  /** The accepted files types. */\n  accept?: string;\n  /** Maximum number of files uploading at a time. */\n  parallelUploads?: number;\n  /** Maximum files count in the queue. */\n  maxFiles?: number;\n  /** Maximum file size in MB. */\n  maxFileSize?: number;\n  /** Starts uploading on file select. */\n  autoStart?: boolean;\n  /** Generate thumbnails for image files. */\n  thumbs?: boolean;\n  /** Thumbnail width in px. */\n  thumbWidth?: number;\n  /** Thumbnail height in px. */\n  thumbHeight?: number;\n  /** The method used to generate the thumbnails. */\n  thumbMethod?: ResizeMethod;\n  /** The method used to resize the images before uploading. */\n  resizeMethod?: ResizeMethod;\n  /** Image new width in px. */\n  resizeWidth?: number;\n  /** Image new height in px. */\n  resizeHeight?: number;\n  /** Quality of re-sized image between 0 and 1 (not on Edge). */\n  resizeMimeType?: string;\n  /** The mime type of the resized image e.g. image/jpeg. */\n  resizeQuality?: number;\n}\n\n/** Resize method options */\nexport enum ResizeMethod {\n  Crop = 'crop',\n  Contain = 'contain'\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    projects/core/src/lib/drop-zone.directive.ts\n            \n            \n                directive\n            \n            \n                DropZoneDirective\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/file-item.ts\n            \n            \n                class\n            \n            \n                FileItem\n            \n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/fire-uploader-ref.ts\n            \n            \n                class\n            \n            \n                FireUploaderRef\n            \n            \n                90 %\n                (30/33)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/fire-uploader.default.ts\n            \n            \n                variable\n            \n            \n                DEFAULT_CONFIG\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/fire-uploader.model.ts\n            \n            \n                interface\n            \n            \n                FileSnapshot\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/fire-uploader.model.ts\n            \n            \n                interface\n            \n            \n                FireUploaderConfig\n            \n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/fire-uploader.model.ts\n            \n            \n                interface\n            \n            \n                UploaderProgress\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/fire-uploader.model.ts\n            \n            \n                interface\n            \n            \n                UploaderState\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/fire-uploader.module.ts\n            \n            \n                function\n            \n            \n                UploaderFactory\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/fire-uploader.token.ts\n            \n            \n                variable\n            \n            \n                UPLOADER_CONFIG\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/fire-uploader.ts\n            \n            \n                injectable\n            \n            \n                FireUploader\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/utils.ts\n            \n            \n                function\n            \n            \n                convertToMB\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/utils.ts\n            \n            \n                function\n            \n            \n                parallizeUploads\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/utils.ts\n            \n            \n                function\n            \n            \n                processFile\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/utils.ts\n            \n            \n                function\n            \n            \n                resizeImage\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/utils.ts\n            \n            \n                function\n            \n            \n                selectFiles\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/utils.ts\n            \n            \n                variable\n            \n            \n                isImage\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/utils.ts\n            \n            \n                variable\n            \n            \n                maxFilesError\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/core/src/lib/utils.ts\n            \n            \n                variable\n            \n            \n                maxFileSizeError\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.0\n        \n            @angular/common : ^6.0.0\n        \n            @angular/compiler : ^6.0.0\n        \n            @angular/core : ^6.0.0\n        \n            @angular/forms : ^6.0.0\n        \n            @angular/http : ^6.0.0\n        \n            @angular/platform-browser : ^6.0.0\n        \n            @angular/platform-browser-dynamic : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            @ng-bootstrap/ng-bootstrap : ^2.0.0\n        \n            angular2-notifications : ^1.0.2\n        \n            angularfire2 : ^5.0.0-rc.10\n        \n            classlist.js : ^1.1.20150312\n        \n            core-js : ^2.5.4\n        \n            firebase : ^5.0.4\n        \n            rxjs : ^6.2.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ResizeMethod   (projects/.../fire-uploader.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/fire-uploader.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ResizeMethod\n                    \n                \n                    \n                        \n                            Resize method options \n\n                        \n                    \n                        \n                            \n                                 Crop\n                            \n                        \n                        \n                            \n                                Value: crop\n                            \n                        \n                        \n                            \n                                 Contain\n                            \n                        \n                        \n                            \n                                Value: contain\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToMB   (projects/.../utils.ts)\n                        \n                        \n                            parallizeUploads   (projects/.../utils.ts)\n                        \n                        \n                            processFile   (projects/.../utils.ts)\n                        \n                        \n                            resizeImage   (projects/.../utils.ts)\n                        \n                        \n                            selectFiles   (projects/.../utils.ts)\n                        \n                        \n                            UploaderFactory   (projects/.../fire-uploader.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            convertToMB\n                            \n                            \n                        \n                    \n                \n                \n                    \nconvertToMB(size: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Convert file size to MB \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parallizeUploads\n                            \n                            \n                        \n                    \n                \n                \n                    \nparallizeUploads(files: undefined, parallelUploads: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Splice files array into chunks for parallel upload \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parallelUploads\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processFile\n                            \n                            \n                        \n                    \n                \n                \n                    \nprocessFile(item: undefined, width: undefined, height: undefined, method: undefined, quality: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Resize images if needed \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        width\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        height\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        method\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        quality\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resizeImage\n                            \n                            \n                        \n                    \n                \n                \n                    \nresizeImage(item: undefined, maxWidth: undefined, maxHeight: undefined, method: undefined, quality: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Resize image file at run time \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        maxWidth\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        maxHeight\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        method\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        quality\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectFiles(accept: undefined, multiple: boolean)\n                    \n                \n\n\n\n\n                \n                    \n                            Opens select file dialog \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accept\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        multiple\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/core/src/lib/fire-uploader.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UploaderFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nUploaderFactory(config: undefined, storage: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Create a FireUploader service \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        storage\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxFireUploader\nThis is still WIP, documentation is at the wiki\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Murhaf Sousli\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FireUploaderModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FireUploaderModule\n\n\n\ncluster_FireUploaderModule_declarations\n\n\n\ncluster_FireUploaderModule_exports\n\n\n\n\nDropZoneDirective\n\nDropZoneDirective\n\n\n\nFireUploaderModule\n\nFireUploaderModule\n\nFireUploaderModule -->\n\nDropZoneDirective->FireUploaderModule\n\n\n\n\n\nDropZoneDirective \n\nDropZoneDirective \n\nDropZoneDirective  -->\n\nFireUploaderModule->DropZoneDirective \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_CONFIG   (projects/.../fire-uploader.default.ts)\n                        \n                        \n                            isImage   (projects/.../utils.ts)\n                        \n                        \n                            maxFilesError   (projects/.../utils.ts)\n                        \n                        \n                            maxFileSizeError   (projects/.../utils.ts)\n                        \n                        \n                            UPLOADER_CONFIG   (projects/.../fire-uploader.token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/fire-uploader.default.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_CONFIG\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_CONFIG:     FireUploaderConfig\n\n                    \n                \n                    \n                        \n                            Type :     FireUploaderConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  paramName: null,\n  paramDir: null,\n  uniqueName: true,\n  multiple: true,\n  accept: null,\n  parallelUploads: 1,\n  maxFiles: 20,\n  autoStart: false,\n  thumbs: true,\n  thumbMethod: ResizeMethod.Contain,\n  thumbWidth: 100,\n  thumbHeight: 100,\n  resizeMethod: ResizeMethod.Crop,\n  resizeWidth: null,\n  resizeHeight: null,\n  resizeMimeType: null,\n  resizeQuality: 1\n}\n                        \n                    \n\n                \n                    \n                        Uploader default config  \n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isImage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isImage:     \n\n                    \n                \n                    \n                        \n                            Default value : (file: File) => {\n  return file.type.split('/')[0] === 'image';\n}\n                        \n                    \n\n                \n                    \n                        Check if a file type is image \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxFilesError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxFilesError:     \n\n                    \n                \n                    \n                        \n                            Default value : (maxFiles: number) => {\n  return {\n    type: 'uploader/count_limit_exceeded',\n    message: `Max files has exceeded, Only ${maxFiles} is accepted.`\n  };\n}\n                        \n                    \n\n                \n                    \n                        Uploader errors \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxFileSizeError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxFileSizeError:     \n\n                    \n                \n                    \n                        \n                            Default value : (fileName: string) => {\n  return {\n    type: 'uploader/size_limit_exceeded',\n    message: `${fileName} has exceeded the max size allowed.`\n  };\n}\n                        \n                    \n\n                \n                    \n                        Throw error when max file size has exceeded \n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/fire-uploader.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UPLOADER_CONFIG\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        UPLOADER_CONFIG:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('config')\n                        \n                    \n\n                \n                    \n                        FireUploaderConfig token \n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
