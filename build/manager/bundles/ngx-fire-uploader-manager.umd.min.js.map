{
  "version": 3,
  "file": "ngx-fire-uploader-manager.umd.min.js",
  "sources": [
    "ng://@ngx-fire-uploader/manager/out/file-size.pipe.ts",
    "ng://@ngx-fire-uploader/manager/out/file-item.component.ts",
    "ng://@ngx-fire-uploader/manager/out/safe-url.pipe.ts",
    "ng://@ngx-fire-uploader/manager/out/fire-manager.token.ts",
    "ng://@ngx-fire-uploader/manager/out/fire-manager.ts",
    "ng://@ngx-fire-uploader/manager/out/fire-manager.component.ts",
    "ng://@ngx-fire-uploader/manager/out/fire-manager.module.ts"
  ],
  "sourcesContent": [
    "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'fileSize'})\nexport class FileSizePipe implements PipeTransform {\n\n  private units = [\n    'B',\n    'KB',\n    'MB',\n    'GB'\n  ];\n\n  transform(bytes: number = 0, precision: number = 1): string {\n    if (isNaN(parseFloat(String(bytes))) || !isFinite(bytes)) return '?';\n\n    let unit = 0;\n\n    while (bytes >= 1024) {\n      bytes /= 1024;\n      unit++;\n    }\n    return bytes.toFixed(precision) + ' ' + this.units[unit];\n  }\n}\n",
    "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FileSnapshot } from '@ngx-fire-uploader/core';\n\n@Component({\n  selector: 'file-item',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<div class=\"file-item file-{{snapshot.state}}\">\r\n  <div class=\"file-thumb\"\r\n       [style.background]=\"sanitizer.bypassSecurityTrustStyle(extensions[snapshot.extension])\">\r\n    <!--<span *ngIf=\"!snapshot.thumbnail && !extensions[snapshot.extension]?.includes('url')\">-->\r\n      <!--{{ snapshot.extension }}-->\r\n    <!--</span>-->\r\n    <span *ngIf=\"!snapshot.thumbnail && !extensions[snapshot.extension]?.includes('url')\">\r\n      {{ snapshot.extension }}\r\n    </span>\r\n    <div *ngIf=\"snapshot.thumbnail\" class=\"file-thumb-img\">\r\n      <img [src]=\"snapshot.thumbnail | safeUrl\">\r\n    </div>\r\n  </div>\r\n  <div class=\"file-overlay\">\r\n    <div class=\"file-success-icon\"></div>\r\n    <div class=\"file-error-icon\"></div>\r\n  </div>\r\n  <div *ngIf=\"showProgress\" class=\"file-progress-bar\">\r\n    <div class=\"file-bar\"\r\n         [style.transform]=\"'translate3d(' + (-100 + snapshot.progress.percentage) + '%,0,0)'\"></div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"showDetails\" class=\"file-details\">\r\n  <div class=\"file-detail file-name\">\r\n    <span>{{ snapshot.name }}</span>\r\n  </div>\r\n  <div class=\"file-detail file-size\">\r\n    <span>{{ snapshot.progress.totalBytes | fileSize }}</span>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"showRemove\" class=\"file-remove\">\r\n  <button class=\"file-remove-button\" (click)=\"removeClicked($event)\">\r\n    <div class=\"file-remove-icon\"></div>\r\n  </button>\r\n</div>\r\n`\n})\n\nexport class FileItemComponent {\n\n  @Input() snapshot: FileSnapshot;\n\n  // Show fire-uploader progress bar\n  @Input() showProgress: boolean;\n\n  // Shows file name and size\n  @Input() showDetails: boolean;\n\n  // Shows remove button\n  @Input() showRemove: boolean;\n\n  // To set background based on file extension\n  @Input() extensions: any;\n\n  @Output() remove = new EventEmitter();\n\n  constructor(public sanitizer: DomSanitizer) {\n  }\n\n  removeClicked(e: Event) {\n    e.stopPropagation();\n    this.remove.emit();\n  }\n\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeUrl'\n})\nexport class SafeUrlPipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) {\n  }\n\n  transform(value: any): any {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n  }\n\n}\n",
    "import { InjectionToken } from '@angular/core';\r\nimport { FireManagerConfig } from './fire-manager.model';\r\n\r\nexport const CONFIG = new InjectionToken<FireManagerConfig>('config');\r\n",
    "import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { FireManagerConfig } from './fire-manager.model';\r\nimport { CONFIG } from './fire-manager.token';\r\n\r\nconst defaultConfig: FireManagerConfig = {\r\n  showProgress: true,\r\n  showDetails: true,\r\n  showRemove: true\r\n};\r\n\r\n@Injectable()\r\nexport class FireManager {\r\n\r\n  /** Global config */\r\n  config: FireManagerConfig;\r\n\r\n  constructor(@Optional() @Inject(CONFIG) config: FireManagerConfig) {\r\n    this.config = {...defaultConfig, ...config};\r\n  }\r\n}\r\n",
    "import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FireUploaderComponent, FileItem } from '@ngx-fire-uploader/core';\nimport { FireManager } from './fire-manager';\n\n@Component({\n  selector: 'file-preview',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <file-item *ngFor=\"let file of (uploader.state$ | async).files\"\n               [snapshot]=\"file.snapshot$ | async\"\n               [showDetails]=\"showDetails\"\n               [showProgress]=\"showProgress\"\n               [showRemove]=\"showRemove\"\n               [extensions]=\"extensions\"\n               (click)=\"itemClicked($event, file)\"\n               (remove)=\"uploader.removeFile(file)\">\n    </file-item>\n  `\n})\nexport class FireManagerComponent implements OnInit {\n\n  // Reference to the uploader\n  @Input() uploader: FireUploaderComponent;\n\n  // Show the fire-uploader progress bar of each file item\n  @Input() showProgress: boolean = this.manager.config.showProgress;\n\n  // Shows name and size of each file item\n  @Input() showDetails: boolean = this.manager.config.showDetails;\n\n  // Show remove button\n  @Input() showRemove: boolean = this.manager.config.showRemove;\n\n  // Set item background based on file extension\n  @Input() extensions: any = this.manager.config.extensions;\n\n  @Output() itemClick = new EventEmitter<FileItem>();\n\n  constructor(private manager: FireManager) {\n  }\n\n  ngOnInit() {\n    if (!(this.uploader instanceof FireUploaderComponent)) {\n      throw new Error('[FilePreview]: [uploader] input must has FileUploader reference.');\n    }\n  }\n\n  itemClicked(e: Event, file: FileItem) {\n    e.stopPropagation();\n    this.itemClick.emit(file);\n  }\n\n}\n",
    "import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FileSizePipe } from './file-size.pipe';\nimport { FileItemComponent } from './file-item.component';\nimport { SafeUrlPipe } from './safe-url.pipe';\nimport { FireManagerComponent } from './fire-manager.component';\nimport { FireManagerConfig } from './fire-manager.model';\nimport { FireManager } from './fire-manager';\nimport { CONFIG } from './fire-manager.token';\n\nexport function previewerFactory(config: FireManagerConfig) {\n  return new FireManager(config);\n}\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    FileItemComponent,\n    FileSizePipe,\n    SafeUrlPipe,\n    FireManagerComponent\n  ],\n  exports: [\n    FireManagerComponent,\n    FileSizePipe,\n    SafeUrlPipe\n  ]\n})\nexport class FireManagerModule {\n  static forRoot(config?: FireManagerConfig): ModuleWithProviders {\n    return {\n      ngModule: FireManagerModule,\n      providers: [\n        {provide: CONFIG, useValue: config},\n        {\n          provide: FireManager,\n          useFactory: previewerFactory,\n          deps: [CONFIG]\n        }\n      ]\n    };\n  }\n}\n"
  ],
  "names": [
    "FileSizePipe",
    "this",
    "units",
    "prototype",
    "transform",
    "bytes",
    "precision",
    "isNaN",
    "parseFloat",
    "String",
    "isFinite",
    "unit",
    "toFixed",
    "type",
    "Pipe",
    "args",
    "name",
    "FileItemComponent",
    "sanitizer",
    "remove",
    "EventEmitter",
    "removeClicked",
    "e",
    "stopPropagation",
    "emit",
    "Component",
    "selector",
    "preserveWhitespaces",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "template",
    "DomSanitizer",
    "snapshot",
    "Input",
    "showProgress",
    "showDetails",
    "showRemove",
    "extensions",
    "Output",
    "SafeUrlPipe",
    "value",
    "bypassSecurityTrustResourceUrl",
    "CONFIG",
    "InjectionToken",
    "defaultConfig",
    "FireManager",
    "config",
    "Object",
    "assign",
    "Injectable",
    "undefined",
    "decorators",
    "Optional",
    "Inject",
    "FireManagerComponent",
    "manager",
    "itemClick",
    "ngOnInit",
    "uploader",
    "FireUploaderComponent",
    "Error",
    "itemClicked",
    "file",
    "previewerFactory",
    "FireManagerModule",
    "forRoot",
    "ngModule",
    "providers",
    "provide",
    "useValue",
    "useFactory",
    "deps",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
