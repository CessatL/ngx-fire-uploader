!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/platform-browser"),require("@ngx-fire-uploader/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("@ngx-fire-uploader/manager",["exports","@angular/core","@angular/platform-browser","@ngx-fire-uploader/core","@angular/common"],n):n((e["ngx-fire-uploader"]=e["ngx-fire-uploader"]||{},e["ngx-fire-uploader"].manager={}),e.ng.core,e.ng.platformBrowser,e.core$1,e.ng.common)}(this,function(e,n,t,o,s){"use strict";var r=function(){function e(){this.units=["B","KB","MB","GB"]}return e.prototype.transform=function(e,n){if(void 0===e&&(e=0),void 0===n&&(n=1),isNaN(parseFloat(String(e)))||!isFinite(e))return"?";for(var t=0;1024<=e;)e/=1024,t++;return e.toFixed(n)+" "+this.units[t]},e}();r.decorators=[{type:n.Pipe,args:[{name:"fileSize"}]}],r.ctorParameters=function(){return[]};var i=function(){function e(e){this.sanitizer=e,this.remove=new n.EventEmitter}return e.prototype.removeClicked=function(e){e.stopPropagation(),this.remove.emit()},e}();i.decorators=[{type:n.Component,args:[{selector:"file-item",preserveWhitespaces:!1,changeDetection:n.ChangeDetectionStrategy.OnPush,template:'<div class="file-item file-{{snapshot.state}}">\n  <div class="file-thumb"\n       [style.background]="sanitizer.bypassSecurityTrustStyle(extensions[snapshot.extension])">\n    \x3c!--<span *ngIf="!snapshot.thumbnail && !extensions[snapshot.extension]?.includes(\'url\')">--\x3e\n      \x3c!--{{ snapshot.extension }}--\x3e\n    \x3c!--</span>--\x3e\n    <span *ngIf="!snapshot.thumbnail && !extensions[snapshot.extension]?.includes(\'url\')">\n      {{ snapshot.extension }}\n    </span>\n    <div *ngIf="snapshot.thumbnail" class="file-thumb-img">\n      <img [src]="snapshot.thumbnail | safeUrl">\n    </div>\n  </div>\n  <div class="file-overlay">\n    <div class="file-success-icon"></div>\n    <div class="file-error-icon"></div>\n  </div>\n  <div *ngIf="showProgress" class="file-progress-bar">\n    <div class="file-bar"\n         [style.transform]="\'translate3d(\' + (-100 + snapshot.progress.percentage) + \'%,0,0)\'"></div>\n  </div>\n</div>\n<div *ngIf="showDetails" class="file-details">\n  <div class="file-detail file-name">\n    <span>{{ snapshot.name }}</span>\n  </div>\n  <div class="file-detail file-size">\n    <span>{{ snapshot.progress.totalBytes | fileSize }}</span>\n  </div>\n</div>\n<div *ngIf="showRemove" class="file-remove">\n  <button class="file-remove-button" (click)="removeClicked($event)">\n    <div class="file-remove-icon"></div>\n  </button>\n</div>\n'}]}],i.ctorParameters=function(){return[{type:t.DomSanitizer}]},i.propDecorators={snapshot:[{type:n.Input}],showProgress:[{type:n.Input}],showDetails:[{type:n.Input}],showRemove:[{type:n.Input}],extensions:[{type:n.Input}],remove:[{type:n.Output}]};var a=function(){function e(e){this.sanitizer=e}return e.prototype.transform=function(e){return this.sanitizer.bypassSecurityTrustResourceUrl(e)},e}();a.decorators=[{type:n.Pipe,args:[{name:"safeUrl"}]}],a.ctorParameters=function(){return[{type:t.DomSanitizer}]};var p=new n.InjectionToken("config"),c={showProgress:!0,showDetails:!0,showRemove:!0},l=function(e){this.config=Object.assign({},c,e)};l.decorators=[{type:n.Injectable}],l.ctorParameters=function(){return[{type:undefined,decorators:[{type:n.Optional},{type:n.Inject,args:[p]}]}]};var u=function(){function e(e){this.manager=e,this.showProgress=this.manager.config.showProgress,this.showDetails=this.manager.config.showDetails,this.showRemove=this.manager.config.showRemove,this.extensions=this.manager.config.extensions,this.itemClick=new n.EventEmitter}return e.prototype.ngOnInit=function(){if(!(this.uploader instanceof o.FireUploaderComponent))throw new Error("[FilePreview]: [uploader] input must has FileUploader reference.")},e.prototype.itemClicked=function(e,n){e.stopPropagation(),this.itemClick.emit(n)},e}();function f(e){return new l(e)}u.decorators=[{type:n.Component,args:[{selector:"file-preview",preserveWhitespaces:!1,changeDetection:n.ChangeDetectionStrategy.OnPush,template:'\n    <file-item *ngFor="let file of (uploader.state$ | async).files"\n               [snapshot]="file.snapshot$ | async"\n               [showDetails]="showDetails"\n               [showProgress]="showProgress"\n               [showRemove]="showRemove"\n               [extensions]="extensions"\n               (click)="itemClicked($event, file)"\n               (remove)="uploader.removeFile(file)">\n    </file-item>\n  '}]}],u.ctorParameters=function(){return[{type:l}]},u.propDecorators={uploader:[{type:n.Input}],showProgress:[{type:n.Input}],showDetails:[{type:n.Input}],showRemove:[{type:n.Input}],extensions:[{type:n.Input}],itemClick:[{type:n.Output}]};var m=function(){function n(){}return n.forRoot=function(e){return{ngModule:n,providers:[{provide:p,useValue:e},{provide:l,useFactory:f,deps:[p]}]}},n}();m.decorators=[{type:n.NgModule,args:[{imports:[s.CommonModule],declarations:[i,r,a,u],exports:[u,r,a]}]}],m.ctorParameters=function(){return[]},e.previewerFactory=f,e.FireManagerModule=m,e.FireManagerComponent=u,e.FileItemComponent=i,e.FileSizePipe=r,e.ɵa=l,e.ɵb=p,e.ɵc=a,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-fire-uploader-manager.umd.min.js.map
