{
  "version": 3,
  "file": "ngx-fire-uploader-manager.js",
  "sources": [
    "ng://@ngx-fire-uploader/manager/out/fire-manager.module.ts",
    "ng://@ngx-fire-uploader/manager/out/fire-manager.component.ts",
    "ng://@ngx-fire-uploader/manager/out/fire-manager.ts",
    "ng://@ngx-fire-uploader/manager/out/fire-manager.token.ts",
    "ng://@ngx-fire-uploader/manager/out/safe-url.pipe.ts",
    "ng://@ngx-fire-uploader/manager/out/file-item.component.ts",
    "ng://@ngx-fire-uploader/manager/out/file-size.pipe.ts"
  ],
  "sourcesContent": [
    "import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FileSizePipe } from './file-size.pipe';\nimport { FileItemComponent } from './file-item.component';\nimport { SafeUrlPipe } from './safe-url.pipe';\nimport { FireManagerComponent } from './fire-manager.component';\nimport { FireManagerConfig } from './fire-manager.model';\nimport { FireManager } from './fire-manager';\nimport { CONFIG } from './fire-manager.token';\n\nexport function previewerFactory(config: FireManagerConfig) {\n  return new FireManager(config);\n}\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    FileItemComponent,\n    FileSizePipe,\n    SafeUrlPipe,\n    FireManagerComponent\n  ],\n  exports: [\n    FireManagerComponent,\n    FileSizePipe,\n    SafeUrlPipe\n  ]\n})\nexport class FireManagerModule {\n  static forRoot(config?: FireManagerConfig): ModuleWithProviders {\n    return {\n      ngModule: FireManagerModule,\n      providers: [\n        {provide: CONFIG, useValue: config},\n        {\n          provide: FireManager,\n          useFactory: previewerFactory,\n          deps: [CONFIG]\n        }\n      ]\n    };\n  }\n}\n",
    "import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FireUploaderComponent, FileItem } from '@ngx-fire-uploader/core';\nimport { FireManager } from './fire-manager';\n\n@Component({\n  selector: 'file-preview',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <file-item *ngFor=\"let file of (uploader.state$ | async).files\"\n               [snapshot]=\"file.snapshot$ | async\"\n               [showDetails]=\"showDetails\"\n               [showProgress]=\"showProgress\"\n               [showRemove]=\"showRemove\"\n               [extensions]=\"extensions\"\n               (click)=\"itemClicked($event, file)\"\n               (remove)=\"uploader.removeFile(file)\">\n    </file-item>\n  `\n})\nexport class FireManagerComponent implements OnInit {\n\n  // Reference to the uploader\n  @Input() uploader: FireUploaderComponent;\n\n  // Show the fire-uploader progress bar of each file item\n  @Input() showProgress: boolean = this.manager.config.showProgress;\n\n  // Shows name and size of each file item\n  @Input() showDetails: boolean = this.manager.config.showDetails;\n\n  // Show remove button\n  @Input() showRemove: boolean = this.manager.config.showRemove;\n\n  // Set item background based on file extension\n  @Input() extensions: any = this.manager.config.extensions;\n\n  @Output() itemClick = new EventEmitter<FileItem>();\n\n  constructor(private manager: FireManager) {\n  }\n\n  ngOnInit() {\n    if (!(this.uploader instanceof FireUploaderComponent)) {\n      throw new Error('[FilePreview]: [uploader] input must has FileUploader reference.');\n    }\n  }\n\n  itemClicked(e: Event, file: FileItem) {\n    e.stopPropagation();\n    this.itemClick.emit(file);\n  }\n\n}\n",
    "import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { FireManagerConfig } from './fire-manager.model';\r\nimport { CONFIG } from './fire-manager.token';\r\n\r\nconst defaultConfig: FireManagerConfig = {\r\n  showProgress: true,\r\n  showDetails: true,\r\n  showRemove: true\r\n};\r\n\r\n@Injectable()\r\nexport class FireManager {\r\n\r\n  /** Global config */\r\n  config: FireManagerConfig;\r\n\r\n  constructor(@Optional() @Inject(CONFIG) config: FireManagerConfig) {\r\n    this.config = {...defaultConfig, ...config};\r\n  }\r\n}\r\n",
    "import { InjectionToken } from '@angular/core';\r\nimport { FireManagerConfig } from './fire-manager.model';\r\n\r\nexport const CONFIG = new InjectionToken<FireManagerConfig>('config');\r\n",
    "import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeUrl'\n})\nexport class SafeUrlPipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) {\n  }\n\n  transform(value: any): any {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n  }\n\n}\n",
    "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FileSnapshot } from '@ngx-fire-uploader/core';\n\n@Component({\n  selector: 'file-item',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<div class=\"file-item file-{{snapshot.state}}\">\r\n  <div class=\"file-thumb\"\r\n       [style.background]=\"sanitizer.bypassSecurityTrustStyle(extensions[snapshot.extension])\">\r\n    <!--<span *ngIf=\"!snapshot.thumbnail && !extensions[snapshot.extension]?.includes('url')\">-->\r\n      <!--{{ snapshot.extension }}-->\r\n    <!--</span>-->\r\n    <span *ngIf=\"!snapshot.thumbnail && !extensions[snapshot.extension]?.includes('url')\">\r\n      {{ snapshot.extension }}\r\n    </span>\r\n    <div *ngIf=\"snapshot.thumbnail\" class=\"file-thumb-img\">\r\n      <img [src]=\"snapshot.thumbnail | safeUrl\">\r\n    </div>\r\n  </div>\r\n  <div class=\"file-overlay\">\r\n    <div class=\"file-success-icon\"></div>\r\n    <div class=\"file-error-icon\"></div>\r\n  </div>\r\n  <div *ngIf=\"showProgress\" class=\"file-progress-bar\">\r\n    <div class=\"file-bar\"\r\n         [style.transform]=\"'translate3d(' + (-100 + snapshot.progress.percentage) + '%,0,0)'\"></div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"showDetails\" class=\"file-details\">\r\n  <div class=\"file-detail file-name\">\r\n    <span>{{ snapshot.name }}</span>\r\n  </div>\r\n  <div class=\"file-detail file-size\">\r\n    <span>{{ snapshot.progress.totalBytes | fileSize }}</span>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"showRemove\" class=\"file-remove\">\r\n  <button class=\"file-remove-button\" (click)=\"removeClicked($event)\">\r\n    <div class=\"file-remove-icon\"></div>\r\n  </button>\r\n</div>\r\n`\n})\n\nexport class FileItemComponent {\n\n  @Input() snapshot: FileSnapshot;\n\n  // Show fire-uploader progress bar\n  @Input() showProgress: boolean;\n\n  // Shows file name and size\n  @Input() showDetails: boolean;\n\n  // Shows remove button\n  @Input() showRemove: boolean;\n\n  // To set background based on file extension\n  @Input() extensions: any;\n\n  @Output() remove = new EventEmitter();\n\n  constructor(public sanitizer: DomSanitizer) {\n  }\n\n  removeClicked(e: Event) {\n    e.stopPropagation();\n    this.remove.emit();\n  }\n\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'fileSize'})\nexport class FileSizePipe implements PipeTransform {\n\n  private units = [\n    'B',\n    'KB',\n    'MB',\n    'GB'\n  ];\n\n  transform(bytes: number = 0, precision: number = 1): string {\n    if (isNaN(parseFloat(String(bytes))) || !isFinite(bytes)) return '?';\n\n    let unit = 0;\n\n    while (bytes >= 1024) {\n      bytes /= 1024;\n      unit++;\n    }\n    return bytes.toFixed(precision) + ' ' + this.units[unit];\n  }\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
